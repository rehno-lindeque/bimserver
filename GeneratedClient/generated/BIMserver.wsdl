<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions name="ServiceInterfaceService" targetNamespace="http://shared.bimserver.org/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://shared.bimserver.org/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/">
  <wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://shared.bimserver.org/" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://shared.bimserver.org/">
<xs:element name="addIgnoreFile" type="tns:addIgnoreFile"/>
<xs:element name="addIgnoreFileResponse" type="tns:addIgnoreFileResponse"/>
<xs:element name="addProject" type="tns:addProject"/>
<xs:element name="addProjectAsSubProject" type="tns:addProjectAsSubProject"/>
<xs:element name="addProjectAsSubProjectResponse" type="tns:addProjectAsSubProjectResponse"/>
<xs:element name="addProjectResponse" type="tns:addProjectResponse"/>
<xs:element name="addSerializer" type="tns:addSerializer"/>
<xs:element name="addSerializerResponse" type="tns:addSerializerResponse"/>
<xs:element name="addUser" type="tns:addUser"/>
<xs:element name="addUserResponse" type="tns:addUserResponse"/>
<xs:element name="addUserToProject" type="tns:addUserToProject"/>
<xs:element name="addUserToProjectResponse" type="tns:addUserToProjectResponse"/>
<xs:element name="autologin" type="tns:autologin"/>
<xs:element name="autologinResponse" type="tns:autologinResponse"/>
<xs:element name="branchToExistingProject" type="tns:branchToExistingProject"/>
<xs:element name="branchToExistingProjectResponse" type="tns:branchToExistingProjectResponse"/>
<xs:element name="branchToNewProject" type="tns:branchToNewProject"/>
<xs:element name="branchToNewProjectResponse" type="tns:branchToNewProjectResponse"/>
<xs:element name="changePassword" type="tns:changePassword"/>
<xs:element name="changePasswordResponse" type="tns:changePasswordResponse"/>
<xs:element name="changeUserType" type="tns:changeUserType"/>
<xs:element name="changeUserTypeResponse" type="tns:changeUserTypeResponse"/>
<xs:element name="checkinAsync" type="tns:checkinAsync"/>
<xs:element name="checkinAsyncResponse" type="tns:checkinAsyncResponse"/>
<xs:element name="checkinSync" type="tns:checkinSync"/>
<xs:element name="checkinSyncResponse" type="tns:checkinSyncResponse"/>
<xs:element name="checkout" type="tns:checkout"/>
<xs:element name="checkoutLastRevision" type="tns:checkoutLastRevision"/>
<xs:element name="checkoutLastRevisionResponse" type="tns:checkoutLastRevisionResponse"/>
<xs:element name="checkoutResponse" type="tns:checkoutResponse"/>
<xs:element name="compare" type="tns:compare"/>
<xs:element name="compareResponse" type="tns:compareResponse"/>
<xs:element name="deleteIgnoreFile" type="tns:deleteIgnoreFile"/>
<xs:element name="deleteIgnoreFileResponse" type="tns:deleteIgnoreFileResponse"/>
<xs:element name="deleteProject" type="tns:deleteProject"/>
<xs:element name="deleteProjectResponse" type="tns:deleteProjectResponse"/>
<xs:element name="deleteSerializer" type="tns:deleteSerializer"/>
<xs:element name="deleteSerializerResponse" type="tns:deleteSerializerResponse"/>
<xs:element name="deleteUser" type="tns:deleteUser"/>
<xs:element name="deleteUserResponse" type="tns:deleteUserResponse"/>
<xs:element name="download" type="tns:download"/>
<xs:element name="downloadByGuids" type="tns:downloadByGuids"/>
<xs:element name="downloadByGuidsResponse" type="tns:downloadByGuidsResponse"/>
<xs:element name="downloadByOids" type="tns:downloadByOids"/>
<xs:element name="downloadByOidsResponse" type="tns:downloadByOidsResponse"/>
<xs:element name="downloadOfType" type="tns:downloadOfType"/>
<xs:element name="downloadOfTypeResponse" type="tns:downloadOfTypeResponse"/>
<xs:element name="downloadProjects" type="tns:downloadProjects"/>
<xs:element name="downloadProjectsResponse" type="tns:downloadProjectsResponse"/>
<xs:element name="downloadResponse" type="tns:downloadResponse"/>
<xs:element name="findClashesByEid" type="tns:findClashesByEid"/>
<xs:element name="findClashesByEidResponse" type="tns:findClashesByEidResponse"/>
<xs:element name="findClashesByGuid" type="tns:findClashesByGuid"/>
<xs:element name="findClashesByGuidResponse" type="tns:findClashesByGuidResponse"/>
<xs:element name="getAccessMethod" type="tns:getAccessMethod"/>
<xs:element name="getAccessMethodResponse" type="tns:getAccessMethodResponse"/>
<xs:element name="getActiveLongActions" type="tns:getActiveLongActions"/>
<xs:element name="getActiveLongActionsResponse" type="tns:getActiveLongActionsResponse"/>
<xs:element name="getActiveSince" type="tns:getActiveSince"/>
<xs:element name="getActiveSinceResponse" type="tns:getActiveSinceResponse"/>
<xs:element name="getActiveUserSessions" type="tns:getActiveUserSessions"/>
<xs:element name="getActiveUserSessionsResponse" type="tns:getActiveUserSessionsResponse"/>
<xs:element name="getAllAuthorizedUsersOfProject" type="tns:getAllAuthorizedUsersOfProject"/>
<xs:element name="getAllAuthorizedUsersOfProjectResponse" type="tns:getAllAuthorizedUsersOfProjectResponse"/>
<xs:element name="getAllCheckoutsByUser" type="tns:getAllCheckoutsByUser"/>
<xs:element name="getAllCheckoutsByUserResponse" type="tns:getAllCheckoutsByUserResponse"/>
<xs:element name="getAllCheckoutsOfProject" type="tns:getAllCheckoutsOfProject"/>
<xs:element name="getAllCheckoutsOfProjectAndSubProjects" type="tns:getAllCheckoutsOfProjectAndSubProjects"/>
<xs:element name="getAllCheckoutsOfProjectAndSubProjectsResponse" type="tns:getAllCheckoutsOfProjectAndSubProjectsResponse"/>
<xs:element name="getAllCheckoutsOfProjectResponse" type="tns:getAllCheckoutsOfProjectResponse"/>
<xs:element name="getAllCheckoutsOfRevision" type="tns:getAllCheckoutsOfRevision"/>
<xs:element name="getAllCheckoutsOfRevisionResponse" type="tns:getAllCheckoutsOfRevisionResponse"/>
<xs:element name="getAllIgnoreFiles" type="tns:getAllIgnoreFiles"/>
<xs:element name="getAllIgnoreFilesResponse" type="tns:getAllIgnoreFilesResponse"/>
<xs:element name="getAllNonAuthorizedProjectsOfUser" type="tns:getAllNonAuthorizedProjectsOfUser"/>
<xs:element name="getAllNonAuthorizedProjectsOfUserResponse" type="tns:getAllNonAuthorizedProjectsOfUserResponse"/>
<xs:element name="getAllNonAuthorizedUsersOfProject" type="tns:getAllNonAuthorizedUsersOfProject"/>
<xs:element name="getAllNonAuthorizedUsersOfProjectResponse" type="tns:getAllNonAuthorizedUsersOfProjectResponse"/>
<xs:element name="getAllProjects" type="tns:getAllProjects"/>
<xs:element name="getAllProjectsResponse" type="tns:getAllProjectsResponse"/>
<xs:element name="getAllReadableProjects" type="tns:getAllReadableProjects"/>
<xs:element name="getAllReadableProjectsResponse" type="tns:getAllReadableProjectsResponse"/>
<xs:element name="getAllResultTypes" type="tns:getAllResultTypes"/>
<xs:element name="getAllResultTypesResponse" type="tns:getAllResultTypesResponse"/>
<xs:element name="getAllRevisionsByUser" type="tns:getAllRevisionsByUser"/>
<xs:element name="getAllRevisionsByUserResponse" type="tns:getAllRevisionsByUserResponse"/>
<xs:element name="getAllRevisionsOfProject" type="tns:getAllRevisionsOfProject"/>
<xs:element name="getAllRevisionsOfProjectResponse" type="tns:getAllRevisionsOfProjectResponse"/>
<xs:element name="getAllSerializerClassNames" type="tns:getAllSerializerClassNames"/>
<xs:element name="getAllSerializerClassNamesResponse" type="tns:getAllSerializerClassNamesResponse"/>
<xs:element name="getAllSerializers" type="tns:getAllSerializers"/>
<xs:element name="getAllSerializersResponse" type="tns:getAllSerializersResponse"/>
<xs:element name="getAllUsers" type="tns:getAllUsers"/>
<xs:element name="getAllUsersResponse" type="tns:getAllUsersResponse"/>
<xs:element name="getAnonymousUser" type="tns:getAnonymousUser"/>
<xs:element name="getAnonymousUserResponse" type="tns:getAnonymousUserResponse"/>
<xs:element name="getAvailableClasses" type="tns:getAvailableClasses"/>
<xs:element name="getAvailableClassesResponse" type="tns:getAvailableClassesResponse"/>
<xs:element name="getCheckoutWarnings" type="tns:getCheckoutWarnings"/>
<xs:element name="getCheckoutWarningsResponse" type="tns:getCheckoutWarningsResponse"/>
<xs:element name="getClashDetectionSettings" type="tns:getClashDetectionSettings"/>
<xs:element name="getClashDetectionSettingsResponse" type="tns:getClashDetectionSettingsResponse"/>
<xs:element name="getCurrentToken" type="tns:getCurrentToken"/>
<xs:element name="getCurrentTokenResponse" type="tns:getCurrentTokenResponse"/>
<xs:element name="getCurrentUser" type="tns:getCurrentUser"/>
<xs:element name="getCurrentUserResponse" type="tns:getCurrentUserResponse"/>
<xs:element name="getDataObjectByGuid" type="tns:getDataObjectByGuid"/>
<xs:element name="getDataObjectByGuidResponse" type="tns:getDataObjectByGuidResponse"/>
<xs:element name="getDataObjectByOid" type="tns:getDataObjectByOid"/>
<xs:element name="getDataObjectByOidResponse" type="tns:getDataObjectByOidResponse"/>
<xs:element name="getDataObjectsByType" type="tns:getDataObjectsByType"/>
<xs:element name="getDataObjectsByTypeResponse" type="tns:getDataObjectsByTypeResponse"/>
<xs:element name="getDatabaseInformation" type="tns:getDatabaseInformation"/>
<xs:element name="getDatabaseInformationResponse" type="tns:getDatabaseInformationResponse"/>
<xs:element name="getDownloadData" type="tns:getDownloadData"/>
<xs:element name="getDownloadDataResponse" type="tns:getDownloadDataResponse"/>
<xs:element name="getDownloadState" type="tns:getDownloadState"/>
<xs:element name="getDownloadStateResponse" type="tns:getDownloadStateResponse"/>
<xs:element name="getEnabledResultTypes" type="tns:getEnabledResultTypes"/>
<xs:element name="getEnabledResultTypesResponse" type="tns:getEnabledResultTypesResponse"/>
<xs:element name="getGeoTag" type="tns:getGeoTag"/>
<xs:element name="getGeoTagResponse" type="tns:getGeoTagResponse"/>
<xs:element name="getIgnoreFileById" type="tns:getIgnoreFileById"/>
<xs:element name="getIgnoreFileByIdResponse" type="tns:getIgnoreFileByIdResponse"/>
<xs:element name="getLastActive" type="tns:getLastActive"/>
<xs:element name="getLastActiveResponse" type="tns:getLastActiveResponse"/>
<xs:element name="getLastClashes" type="tns:getLastClashes"/>
<xs:element name="getLastClashesResponse" type="tns:getLastClashesResponse"/>
<xs:element name="getLastDatabaseReset" type="tns:getLastDatabaseReset"/>
<xs:element name="getLastDatabaseResetResponse" type="tns:getLastDatabaseResetResponse"/>
<xs:element name="getLoggedInUser" type="tns:getLoggedInUser"/>
<xs:element name="getLoggedInUserResponse" type="tns:getLoggedInUserResponse"/>
<xs:element name="getLogs" type="tns:getLogs"/>
<xs:element name="getLogsResponse" type="tns:getLogsResponse"/>
<xs:element name="getMigrations" type="tns:getMigrations"/>
<xs:element name="getMigrationsResponse" type="tns:getMigrationsResponse"/>
<xs:element name="getProjectByName" type="tns:getProjectByName"/>
<xs:element name="getProjectByNameResponse" type="tns:getProjectByNameResponse"/>
<xs:element name="getProjectByPoid" type="tns:getProjectByPoid"/>
<xs:element name="getProjectByPoidResponse" type="tns:getProjectByPoidResponse"/>
<xs:element name="getResultTypeByName" type="tns:getResultTypeByName"/>
<xs:element name="getResultTypeByNameResponse" type="tns:getResultTypeByNameResponse"/>
<xs:element name="getRevision" type="tns:getRevision"/>
<xs:element name="getRevisionResponse" type="tns:getRevisionResponse"/>
<xs:element name="getRevisionSummary" type="tns:getRevisionSummary"/>
<xs:element name="getRevisionSummaryResponse" type="tns:getRevisionSummaryResponse"/>
<xs:element name="getSerializerById" type="tns:getSerializerById"/>
<xs:element name="getSerializerByIdResponse" type="tns:getSerializerByIdResponse"/>
<xs:element name="getSettingCustomLogoAddress" type="tns:getSettingCustomLogoAddress"/>
<xs:element name="getSettingCustomLogoAddressResponse" type="tns:getSettingCustomLogoAddressResponse"/>
<xs:element name="getSettingEmailSenderAddress" type="tns:getSettingEmailSenderAddress"/>
<xs:element name="getSettingEmailSenderAddressResponse" type="tns:getSettingEmailSenderAddressResponse"/>
<xs:element name="getSettingEnabledExportTypes" type="tns:getSettingEnabledExportTypes"/>
<xs:element name="getSettingEnabledExportTypesResponse" type="tns:getSettingEnabledExportTypesResponse"/>
<xs:element name="getSettingFooterAddition" type="tns:getSettingFooterAddition"/>
<xs:element name="getSettingFooterAdditionResponse" type="tns:getSettingFooterAdditionResponse"/>
<xs:element name="getSettingHeaderAddition" type="tns:getSettingHeaderAddition"/>
<xs:element name="getSettingHeaderAdditionResponse" type="tns:getSettingHeaderAdditionResponse"/>
<xs:element name="getSettingMergeIdentifier" type="tns:getSettingMergeIdentifier"/>
<xs:element name="getSettingMergeIdentifierResponse" type="tns:getSettingMergeIdentifierResponse"/>
<xs:element name="getSettingRegistrationAddition" type="tns:getSettingRegistrationAddition"/>
<xs:element name="getSettingRegistrationAdditionResponse" type="tns:getSettingRegistrationAdditionResponse"/>
<xs:element name="getSettingSiteAddress" type="tns:getSettingSiteAddress"/>
<xs:element name="getSettingSiteAddressResponse" type="tns:getSettingSiteAddressResponse"/>
<xs:element name="getSettingSmtpServer" type="tns:getSettingSmtpServer"/>
<xs:element name="getSettingSmtpServerResponse" type="tns:getSettingSmtpServerResponse"/>
<xs:element name="getSubProjects" type="tns:getSubProjects"/>
<xs:element name="getSubProjectsResponse" type="tns:getSubProjectsResponse"/>
<xs:element name="getUserByUoid" type="tns:getUserByUoid"/>
<xs:element name="getUserByUoidResponse" type="tns:getUserByUoidResponse"/>
<xs:element name="getUserByUserName" type="tns:getUserByUserName"/>
<xs:element name="getUserByUserNameResponse" type="tns:getUserByUserNameResponse"/>
<xs:element name="getUsersProjects" type="tns:getUsersProjects"/>
<xs:element name="getUsersProjectsResponse" type="tns:getUsersProjectsResponse"/>
<xs:element name="isLoggedIn" type="tns:isLoggedIn"/>
<xs:element name="isLoggedInResponse" type="tns:isLoggedInResponse"/>
<xs:element name="isResultTypeEnabled" type="tns:isResultTypeEnabled"/>
<xs:element name="isResultTypeEnabledResponse" type="tns:isResultTypeEnabledResponse"/>
<xs:element name="isSettingAllowSelfRegistration" type="tns:isSettingAllowSelfRegistration"/>
<xs:element name="isSettingAllowSelfRegistrationResponse" type="tns:isSettingAllowSelfRegistrationResponse"/>
<xs:element name="isSettingAllowUsersToCreateTopLevelProjects" type="tns:isSettingAllowUsersToCreateTopLevelProjects"/>
<xs:element name="isSettingAllowUsersToCreateTopLevelProjectsResponse" type="tns:isSettingAllowUsersToCreateTopLevelProjectsResponse"/>
<xs:element name="isSettingAutoTestClashes" type="tns:isSettingAutoTestClashes"/>
<xs:element name="isSettingAutoTestClashesResponse" type="tns:isSettingAutoTestClashesResponse"/>
<xs:element name="isSettingCacheOutputFiles" type="tns:isSettingCacheOutputFiles"/>
<xs:element name="isSettingCacheOutputFilesResponse" type="tns:isSettingCacheOutputFilesResponse"/>
<xs:element name="isSettingCheckinMergingEnabled" type="tns:isSettingCheckinMergingEnabled"/>
<xs:element name="isSettingCheckinMergingEnabledResponse" type="tns:isSettingCheckinMergingEnabledResponse"/>
<xs:element name="isSettingIntelligentMerging" type="tns:isSettingIntelligentMerging"/>
<xs:element name="isSettingIntelligentMergingResponse" type="tns:isSettingIntelligentMergingResponse"/>
<xs:element name="isSettingSendConfirmationEmailAfterRegistration" type="tns:isSettingSendConfirmationEmailAfterRegistration"/>
<xs:element name="isSettingSendConfirmationEmailAfterRegistrationResponse" type="tns:isSettingSendConfirmationEmailAfterRegistrationResponse"/>
<xs:element name="isSettingShowVersionUpgradeAvailable" type="tns:isSettingShowVersionUpgradeAvailable"/>
<xs:element name="isSettingShowVersionUpgradeAvailableResponse" type="tns:isSettingShowVersionUpgradeAvailableResponse"/>
<xs:element name="login" type="tns:login"/>
<xs:element name="loginAnonymous" type="tns:loginAnonymous"/>
<xs:element name="loginAnonymousResponse" type="tns:loginAnonymousResponse"/>
<xs:element name="loginResponse" type="tns:loginResponse"/>
<xs:element name="logout" type="tns:logout"/>
<xs:element name="logoutResponse" type="tns:logoutResponse"/>
<xs:element name="longActionState" type="tns:longActionState"/>
<xs:element name="migrateDatabase" type="tns:migrateDatabase"/>
<xs:element name="migrateDatabaseResponse" type="tns:migrateDatabaseResponse"/>
<xs:element name="ping" type="tns:ping"/>
<xs:element name="pingResponse" type="tns:pingResponse"/>
<xs:element name="removeUserFromProject" type="tns:removeUserFromProject"/>
<xs:element name="removeUserFromProjectResponse" type="tns:removeUserFromProjectResponse"/>
<xs:element name="requestPasswordChange" type="tns:requestPasswordChange"/>
<xs:element name="requestPasswordChangeResponse" type="tns:requestPasswordChangeResponse"/>
<xs:element name="resultType" type="tns:resultType"/>
<xs:element name="sCheckout" type="tns:sCheckout"/>
<xs:element name="sClash" type="tns:sClash"/>
<xs:element name="sClashDetectionSettings" type="tns:sClashDetectionSettings"/>
<xs:element name="sDataObject" type="tns:sDataObject"/>
<xs:element name="sDataValue" type="tns:sDataValue"/>
<xs:element name="sDownloadResult" type="tns:sDownloadResult"/>
<xs:element name="sEidClash" type="tns:sEidClash"/>
<xs:element name="sGeoTag" type="tns:sGeoTag"/>
<xs:element name="sGuidClash" type="tns:sGuidClash"/>
<xs:element name="sIgnoreFile" type="tns:sIgnoreFile"/>
<xs:element name="sListDataValue" type="tns:sListDataValue"/>
<xs:element name="sLogAction" type="tns:sLogAction"/>
<xs:element name="sProject" type="tns:sProject"/>
<xs:element name="sReferenceDataValue" type="tns:sReferenceDataValue"/>
<xs:element name="sRevision" type="tns:sRevision"/>
<xs:element name="sSerializer" type="tns:sSerializer"/>
<xs:element name="sSimpleDataValue" type="tns:sSimpleDataValue"/>
<xs:element name="sUser" type="tns:sUser"/>
<xs:element name="sendClashesEmail" type="tns:sendClashesEmail"/>
<xs:element name="sendClashesEmailResponse" type="tns:sendClashesEmailResponse"/>
<xs:element name="sendCompareEmail" type="tns:sendCompareEmail"/>
<xs:element name="sendCompareEmailResponse" type="tns:sendCompareEmailResponse"/>
<xs:element name="setExportTypeEnabled" type="tns:setExportTypeEnabled"/>
<xs:element name="setExportTypeEnabledResponse" type="tns:setExportTypeEnabledResponse"/>
<xs:element name="setRevisionTag" type="tns:setRevisionTag"/>
<xs:element name="setRevisionTagResponse" type="tns:setRevisionTagResponse"/>
<xs:element name="setSettingAllowSelfRegistration" type="tns:setSettingAllowSelfRegistration"/>
<xs:element name="setSettingAllowSelfRegistrationResponse" type="tns:setSettingAllowSelfRegistrationResponse"/>
<xs:element name="setSettingAllowUsersToCreateTopLevelProjects" type="tns:setSettingAllowUsersToCreateTopLevelProjects"/>
<xs:element name="setSettingAllowUsersToCreateTopLevelProjectsResponse" type="tns:setSettingAllowUsersToCreateTopLevelProjectsResponse"/>
<xs:element name="setSettingAutoTestClashes" type="tns:setSettingAutoTestClashes"/>
<xs:element name="setSettingAutoTestClashesResponse" type="tns:setSettingAutoTestClashesResponse"/>
<xs:element name="setSettingCacheOutputFiles" type="tns:setSettingCacheOutputFiles"/>
<xs:element name="setSettingCacheOutputFilesResponse" type="tns:setSettingCacheOutputFilesResponse"/>
<xs:element name="setSettingCheckinMergingEnabled" type="tns:setSettingCheckinMergingEnabled"/>
<xs:element name="setSettingCheckinMergingEnabledResponse" type="tns:setSettingCheckinMergingEnabledResponse"/>
<xs:element name="setSettingCustomLogoAddress" type="tns:setSettingCustomLogoAddress"/>
<xs:element name="setSettingCustomLogoAddressResponse" type="tns:setSettingCustomLogoAddressResponse"/>
<xs:element name="setSettingEmailSenderAddress" type="tns:setSettingEmailSenderAddress"/>
<xs:element name="setSettingEmailSenderAddressResponse" type="tns:setSettingEmailSenderAddressResponse"/>
<xs:element name="setSettingEnabledExportTypes" type="tns:setSettingEnabledExportTypes"/>
<xs:element name="setSettingEnabledExportTypesResponse" type="tns:setSettingEnabledExportTypesResponse"/>
<xs:element name="setSettingFooterAddition" type="tns:setSettingFooterAddition"/>
<xs:element name="setSettingFooterAdditionResponse" type="tns:setSettingFooterAdditionResponse"/>
<xs:element name="setSettingHeaderAddition" type="tns:setSettingHeaderAddition"/>
<xs:element name="setSettingHeaderAdditionResponse" type="tns:setSettingHeaderAdditionResponse"/>
<xs:element name="setSettingIntelligentMerging" type="tns:setSettingIntelligentMerging"/>
<xs:element name="setSettingIntelligentMergingResponse" type="tns:setSettingIntelligentMergingResponse"/>
<xs:element name="setSettingMergeIdentifier" type="tns:setSettingMergeIdentifier"/>
<xs:element name="setSettingMergeIdentifierResponse" type="tns:setSettingMergeIdentifierResponse"/>
<xs:element name="setSettingRegistrationAddition" type="tns:setSettingRegistrationAddition"/>
<xs:element name="setSettingRegistrationAdditionResponse" type="tns:setSettingRegistrationAdditionResponse"/>
<xs:element name="setSettingSendConfirmationEmailAfterRegistration" type="tns:setSettingSendConfirmationEmailAfterRegistration"/>
<xs:element name="setSettingSendConfirmationEmailAfterRegistrationResponse" type="tns:setSettingSendConfirmationEmailAfterRegistrationResponse"/>
<xs:element name="setSettingShowVersionUpgradeAvailable" type="tns:setSettingShowVersionUpgradeAvailable"/>
<xs:element name="setSettingShowVersionUpgradeAvailableResponse" type="tns:setSettingShowVersionUpgradeAvailableResponse"/>
<xs:element name="setSettingSiteAddress" type="tns:setSettingSiteAddress"/>
<xs:element name="setSettingSiteAddressResponse" type="tns:setSettingSiteAddressResponse"/>
<xs:element name="setSettingSmtpServer" type="tns:setSettingSmtpServer"/>
<xs:element name="setSettingSmtpServerResponse" type="tns:setSettingSmtpServerResponse"/>
<xs:element name="setup" type="tns:setup"/>
<xs:element name="setupResponse" type="tns:setupResponse"/>
<xs:element name="token" type="tns:token"/>
<xs:element name="undeleteProject" type="tns:undeleteProject"/>
<xs:element name="undeleteProjectResponse" type="tns:undeleteProjectResponse"/>
<xs:element name="undeleteUser" type="tns:undeleteUser"/>
<xs:element name="undeleteUserResponse" type="tns:undeleteUserResponse"/>
<xs:element name="updateClashDetectionSettings" type="tns:updateClashDetectionSettings"/>
<xs:element name="updateClashDetectionSettingsResponse" type="tns:updateClashDetectionSettingsResponse"/>
<xs:element name="updateGeoTag" type="tns:updateGeoTag"/>
<xs:element name="updateGeoTagResponse" type="tns:updateGeoTagResponse"/>
<xs:element name="updateIgnoreFile" type="tns:updateIgnoreFile"/>
<xs:element name="updateIgnoreFileResponse" type="tns:updateIgnoreFileResponse"/>
<xs:element name="updateProject" type="tns:updateProject"/>
<xs:element name="updateProjectResponse" type="tns:updateProjectResponse"/>
<xs:element name="updateRevision" type="tns:updateRevision"/>
<xs:element name="updateRevisionResponse" type="tns:updateRevisionResponse"/>
<xs:element name="updateSerializer" type="tns:updateSerializer"/>
<xs:element name="updateSerializerResponse" type="tns:updateSerializerResponse"/>
<xs:element name="userHasCheckinRights" type="tns:userHasCheckinRights"/>
<xs:element name="userHasCheckinRightsResponse" type="tns:userHasCheckinRightsResponse"/>
<xs:element name="userHasRights" type="tns:userHasRights"/>
<xs:element name="userHasRightsResponse" type="tns:userHasRightsResponse"/>
<xs:element name="validateAccount" type="tns:validateAccount"/>
<xs:element name="validateAccountResponse" type="tns:validateAccountResponse"/>
<xs:complexType name="getUsersProjects">
<xs:sequence>
<xs:element name="uoid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUsersProjectsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sProject"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sProject">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="checkouts" nillable="true" type="xs:long"/>
<xs:element name="clashDetectionSettingsId" type="xs:long"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="concreteRevisions" nillable="true" type="xs:long"/>
<xs:element name="createdById" type="xs:long"/>
<xs:element minOccurs="0" name="createdDate" type="xs:dateTime"/>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element minOccurs="0" name="exportLengthMeasurePrefix" type="tns:ssiPrefix"/>
<xs:element name="geoTagId" type="xs:long"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="hasAuthorizedUsers" nillable="true" type="xs:long"/>
<xs:element name="id" type="xs:int"/>
<xs:element name="lastConcreteRevisionId" type="xs:long"/>
<xs:element name="lastRevisionId" type="xs:long"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element name="oid" type="xs:long"/>
<xs:element name="parentId" type="xs:long"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="revisions" nillable="true" type="xs:long"/>
<xs:element minOccurs="0" name="state" type="tns:sObjectState"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="subProjects" nillable="true" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getMigrations">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getMigrationsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sMigration"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sMigration">
<xs:sequence>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element name="executed" type="xs:boolean"/>
<xs:element name="number" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="userHasCheckinRights">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="userHasCheckinRightsResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="isResultTypeEnabled">
<xs:sequence>
<xs:element minOccurs="0" name="resultType" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="isResultTypeEnabledResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getDownloadData">
<xs:sequence>
<xs:element name="actionID" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getDownloadDataResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sDownloadResult"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sDownloadResult">
<xs:sequence>
<xs:element xmlns:ns1="http://www.w3.org/2005/05/xmlmime" minOccurs="0" name="file" ns1:expectedContentTypes="application/octet-stream" type="xs:base64Binary"/>
<xs:element minOccurs="0" name="projectName" type="xs:string"/>
<xs:element name="revisionNr" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCheckoutWarnings">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCheckoutWarningsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingEmailSenderAddress">
<xs:sequence>
<xs:element minOccurs="0" name="emailSenderAddress" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingEmailSenderAddressResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="setSettingFooterAddition">
<xs:sequence>
<xs:element minOccurs="0" name="footerAddition" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingFooterAdditionResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="setSettingEnabledExportTypes">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="enabledExportTypeNames" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingEnabledExportTypesResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="undeleteUser">
<xs:sequence>
<xs:element name="uoid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="undeleteUserResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllRevisionsOfProject">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllRevisionsOfProjectResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sRevision"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sRevision">
<xs:sequence>
<xs:element name="bmi" type="xs:int"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="checkouts" nillable="true" type="xs:long"/>
<xs:element minOccurs="0" name="comment" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="concreteRevisions" nillable="true" type="xs:long"/>
<xs:element minOccurs="0" name="date" type="xs:dateTime"/>
<xs:element name="id" type="xs:int"/>
<xs:element name="laid" type="xs:long"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="lastClashes" nillable="true" type="xs:long"/>
<xs:element name="lastConcreteRevisionId" type="xs:long"/>
<xs:element minOccurs="0" name="lastError" type="xs:string"/>
<xs:element name="nrClashes" type="xs:int"/>
<xs:element name="oid" type="xs:long"/>
<xs:element name="projectId" type="xs:long"/>
<xs:element name="size" type="xs:long"/>
<xs:element minOccurs="0" name="state" type="tns:sCheckinState"/>
<xs:element minOccurs="0" name="tag" type="xs:string"/>
<xs:element name="userId" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkinAsync">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
<xs:element minOccurs="0" name="comment" type="xs:string"/>
<xs:element name="fileSize" type="xs:long"/>
<xs:element xmlns:ns2="http://www.w3.org/2005/05/xmlmime" minOccurs="0" name="ifcFile" ns2:expectedContentTypes="application/octet-stream" type="xs:base64Binary"/>
<xs:element name="merge" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkinAsyncResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sCheckinResult"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sCheckinResult">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
<xs:element minOccurs="0" name="projectName" type="xs:string"/>
<xs:element name="rid" type="xs:int"/>
<xs:element name="roid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setup">
<xs:sequence>
<xs:element minOccurs="0" name="siteAddress" type="xs:string"/>
<xs:element minOccurs="0" name="smtpServer" type="xs:string"/>
<xs:element minOccurs="0" name="adminName" type="xs:string"/>
<xs:element minOccurs="0" name="adminUsername" type="xs:string"/>
<xs:element minOccurs="0" name="adminPassword" type="xs:string"/>
<xs:element name="createAnonymousUser" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setupResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAllProjects">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAllProjectsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sProject"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="loginAnonymous">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="loginAnonymousResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="isLoggedIn">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="isLoggedInResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setRevisionTag">
<xs:sequence>
<xs:element name="roid" type="xs:long"/>
<xs:element minOccurs="0" name="tag" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setRevisionTagResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="setSettingCustomLogoAddress">
<xs:sequence>
<xs:element minOccurs="0" name="customLogoAddress" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingCustomLogoAddressResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getUserByUserName">
<xs:sequence>
<xs:element minOccurs="0" name="username" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserByUserNameResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sUser"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sUser">
<xs:sequence>
<xs:element name="createdById" type="xs:long"/>
<xs:element minOccurs="0" name="createdOn" type="xs:dateTime"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="hasRightsOn" nillable="true" type="xs:long"/>
<xs:element minOccurs="0" name="lastSeen" type="xs:dateTime"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element name="oid" type="xs:long"/>
<xs:element minOccurs="0" name="password" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="revisions" nillable="true" type="xs:long"/>
<xs:element minOccurs="0" name="state" type="tns:sObjectState"/>
<xs:element minOccurs="0" name="userType" type="tns:sUserType"/>
<xs:element minOccurs="0" name="username" type="xs:string"/>
<xs:element minOccurs="0" name="validationToken" type="xs:string"/>
<xs:element minOccurs="0" name="validationTokenCreated" type="xs:dateTime"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addUser">
<xs:sequence>
<xs:element minOccurs="0" name="username" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="type" type="tns:sUserType"/>
<xs:element name="selfRegistration" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addUserResponse">
<xs:sequence>
<xs:element name="return" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingAllowUsersToCreateTopLevelProjects">
<xs:sequence>
<xs:element name="allowUsersToCreateTopLevelProjects" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingAllowUsersToCreateTopLevelProjectsResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="addProject">
<xs:sequence>
<xs:element minOccurs="0" name="projectName" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addProjectResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sProject"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateSerializer">
<xs:sequence>
<xs:element minOccurs="0" name="arg0" type="tns:sSerializer"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sSerializer">
<xs:sequence>
<xs:element minOccurs="0" name="className" type="xs:string"/>
<xs:element minOccurs="0" name="description" type="xs:string"/>
<xs:element name="enabled" type="xs:boolean"/>
<xs:element name="ignoreFileId" type="xs:long"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element name="oid" type="xs:long"/>
<xs:element name="settingsId" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateSerializerResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="updateGeoTag">
<xs:sequence>
<xs:element minOccurs="0" name="sGeoTag" type="tns:sGeoTag"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sGeoTag">
<xs:sequence>
<xs:element name="directionAngle" type="xs:float"/>
<xs:element name="enabled" type="xs:boolean"/>
<xs:element name="epsg" type="xs:int"/>
<xs:element name="oid" type="xs:long"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="projects" nillable="true" type="xs:long"/>
<xs:element name="x" type="xs:float"/>
<xs:element name="y" type="xs:float"/>
<xs:element name="z" type="xs:float"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateGeoTagResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getDownloadState">
<xs:sequence>
<xs:element name="actionID" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getDownloadStateResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:longActionState"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="longActionState">
<xs:sequence>
<xs:element name="progress" type="xs:int"/>
<xs:element minOccurs="0" name="state" type="tns:actionState"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingSmtpServer">
<xs:sequence>
<xs:element minOccurs="0" name="smtpServer" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingSmtpServerResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="setSettingRegistrationAddition">
<xs:sequence>
<xs:element minOccurs="0" name="registrationAddition" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingRegistrationAdditionResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSettingMergeIdentifier">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSettingMergeIdentifierResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sMergeIdentifier"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActiveLongActions">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getActiveLongActionsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sLongAction"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sLongAction">
<xs:sequence>
<xs:element minOccurs="0" name="identification" type="xs:string"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="start" type="xs:dateTime"/>
<xs:element name="userOid" type="xs:long"/>
<xs:element minOccurs="0" name="username" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllSerializerClassNames">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAllSerializerClassNamesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRevision">
<xs:sequence>
<xs:element name="roid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRevisionResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sRevision"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkout">
<xs:sequence>
<xs:element name="roid" type="xs:long"/>
<xs:element minOccurs="0" name="formatIdentifier" type="xs:string"/>
<xs:element name="sync" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkoutResponse">
<xs:sequence>
<xs:element name="return" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingSendConfirmationEmailAfterRegistration">
<xs:sequence>
<xs:element name="sendConfirmationEmailAfterRegistration" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingSendConfirmationEmailAfterRegistrationResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getResultTypeByName">
<xs:sequence>
<xs:element minOccurs="0" name="arg0" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getResultTypeByNameResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:resultType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="resultType">
<xs:sequence/>
<xs:attribute name="name" type="xs:string"/>
</xs:complexType>
<xs:complexType name="getSettingFooterAddition">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSettingFooterAdditionResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAvailableClasses">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAvailableClassesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllRevisionsByUser">
<xs:sequence>
<xs:element name="uoid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllRevisionsByUserResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sRevision"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllResultTypes">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAllResultTypesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:resultType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="downloadByGuids">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="roids" type="xs:long"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="guids" type="xs:string"/>
<xs:element minOccurs="0" name="formatIdentifier" type="xs:string"/>
<xs:element name="sync" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="downloadByGuidsResponse">
<xs:sequence>
<xs:element name="return" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="userHasRights">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="userHasRightsResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addIgnoreFile">
<xs:sequence>
<xs:element minOccurs="0" name="arg0" type="tns:sIgnoreFile"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sIgnoreFile">
<xs:sequence>
<xs:element minOccurs="0" name="data" type="xs:base64Binary"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element name="oid" type="xs:long"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="serializers" nillable="true" type="xs:long"/>
<xs:element name="settingsId" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addIgnoreFileResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="setExportTypeEnabled">
<xs:sequence>
<xs:element minOccurs="0" name="resultTypeName" type="xs:string"/>
<xs:element name="arg1" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setExportTypeEnabledResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAnonymousUser">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAnonymousUserResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sUser"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteUser">
<xs:sequence>
<xs:element name="uoid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteUserResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserByUoid">
<xs:sequence>
<xs:element name="uoid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getUserByUoidResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sUser"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addSerializer">
<xs:sequence>
<xs:element minOccurs="0" name="arg0" type="tns:sSerializer"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addSerializerResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getRevisionSummary">
<xs:sequence>
<xs:element name="roid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getRevisionSummaryResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sRevisionSummary"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sRevisionSummary">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getProjectByPoid">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProjectByPoidResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sProject"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSettingSmtpServer">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSettingSmtpServerResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCurrentToken">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getCurrentTokenResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:token"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="token">
<xs:sequence>
<xs:element name="expires" type="xs:long"/>
<xs:element minOccurs="0" name="tokenString" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getEnabledResultTypes">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getEnabledResultTypesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:resultType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateIgnoreFile">
<xs:sequence>
<xs:element minOccurs="0" name="arg0" type="tns:sIgnoreFile"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateIgnoreFileResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAllNonAuthorizedProjectsOfUser">
<xs:sequence>
<xs:element name="uoid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllNonAuthorizedProjectsOfUserResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sProject"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingShowVersionUpgradeAvailable">
<xs:sequence>
<xs:element name="showVersionUpgradeAvailable" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingShowVersionUpgradeAvailableResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="requestPasswordChange">
<xs:sequence>
<xs:element name="uoid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="requestPasswordChangeResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="isSettingIntelligentMerging">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="isSettingIntelligentMergingResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSettingHeaderAddition">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSettingHeaderAdditionResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkinSync">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
<xs:element minOccurs="0" name="comment" type="xs:string"/>
<xs:element name="fileSize" type="xs:long"/>
<xs:element xmlns:ns3="http://www.w3.org/2005/05/xmlmime" minOccurs="0" name="ifcFile" ns3:expectedContentTypes="application/octet-stream" type="xs:base64Binary"/>
<xs:element name="merge" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkinSyncResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sCheckinResult"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkoutLastRevision">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
<xs:element minOccurs="0" name="formatIdentifier" type="xs:string"/>
<xs:element name="sync" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="checkoutLastRevisionResponse">
<xs:sequence>
<xs:element name="return" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="branchToNewProject">
<xs:sequence>
<xs:element name="roid" type="xs:long"/>
<xs:element minOccurs="0" name="projectName" type="xs:string"/>
<xs:element minOccurs="0" name="comment" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="branchToNewProjectResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sCheckinResult"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getLastDatabaseReset">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getLastDatabaseResetResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:dateTime"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getDataObjectByGuid">
<xs:sequence>
<xs:element name="roid" type="xs:long"/>
<xs:element minOccurs="0" name="guid" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getDataObjectByGuidResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sDataObject"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sDataObject">
<xs:sequence>
<xs:element minOccurs="0" name="type" type="xs:string"/>
<xs:element name="oid" type="xs:long"/>
<xs:element minOccurs="0" name="guid" type="xs:string"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="values" type="tns:sDataValue"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sDataValue">
<xs:sequence>
<xs:element minOccurs="0" name="fieldName" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sReferenceDataValue">
<xs:complexContent>
<xs:extension base="tns:sDataValue">
<xs:sequence>
<xs:element minOccurs="0" name="typeName" type="xs:string"/>
<xs:element name="oid" type="xs:long"/>
<xs:element minOccurs="0" name="guid" type="xs:string"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="sListDataValue">
<xs:complexContent>
<xs:extension base="tns:sDataValue">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="values" type="tns:sDataValue"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="sSimpleDataValue">
<xs:complexContent>
<xs:extension base="tns:sDataValue">
<xs:sequence>
<xs:element minOccurs="0" name="stringValue" type="xs:string"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="downloadOfType">
<xs:sequence>
<xs:element name="roid" type="xs:long"/>
<xs:element minOccurs="0" name="className" type="xs:string"/>
<xs:element minOccurs="0" name="formatIdentifier" type="xs:string"/>
<xs:element name="sync" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="downloadOfTypeResponse">
<xs:sequence>
<xs:element name="return" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateClashDetectionSettings">
<xs:sequence>
<xs:element minOccurs="0" name="sClashDetectionSettings" type="tns:sClashDetectionSettings"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sClashDetectionSettings">
<xs:sequence>
<xs:element name="enabled" type="xs:boolean"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="ignoredClasses" nillable="true" type="xs:string"/>
<xs:element name="margin" type="xs:float"/>
<xs:element name="oid" type="xs:long"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="projects" nillable="true" type="xs:long"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="revisions" nillable="true" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateClashDetectionSettingsResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="addUserToProject">
<xs:sequence>
<xs:element name="uoid" type="xs:long"/>
<xs:element name="poid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addUserToProjectResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActiveUserSessions">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getActiveUserSessionsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sUserSession"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sUserSession">
<xs:sequence>
<xs:element minOccurs="0" name="accessMethod" type="tns:sAccessMethod"/>
<xs:element minOccurs="0" name="activeSince" type="xs:dateTime"/>
<xs:element minOccurs="0" name="lastActive" type="xs:dateTime"/>
<xs:element minOccurs="0" name="name" type="xs:string"/>
<xs:element minOccurs="0" name="type" type="tns:sUserType"/>
<xs:element name="uoid" type="xs:long"/>
<xs:element minOccurs="0" name="username" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingIntelligentMerging">
<xs:sequence>
<xs:element name="intelligentMerging" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingIntelligentMergingResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getLoggedInUser">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getLoggedInUserResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sUser"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingAutoTestClashes">
<xs:sequence>
<xs:element name="autoTestClashes" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingAutoTestClashesResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getGeoTag">
<xs:sequence>
<xs:element name="goid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getGeoTagResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sGeoTag"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="branchToExistingProject">
<xs:sequence>
<xs:element name="roid" type="xs:long"/>
<xs:element name="destPoid" type="xs:long"/>
<xs:element minOccurs="0" name="comment" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="branchToExistingProjectResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sCheckinResult"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAccessMethod">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAccessMethodResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sAccessMethod"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSettingRegistrationAddition">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSettingRegistrationAdditionResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="isSettingAllowSelfRegistration">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="isSettingAllowSelfRegistrationResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingSiteAddress">
<xs:sequence>
<xs:element minOccurs="0" name="siteAddress" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingSiteAddressResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAllIgnoreFiles">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAllIgnoreFilesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sIgnoreFile"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllCheckoutsOfProjectAndSubProjects">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllCheckoutsOfProjectAndSubProjectsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sCheckout"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sCheckout">
<xs:sequence>
<xs:element name="active" type="xs:boolean"/>
<xs:element name="checkinId" type="xs:long"/>
<xs:element minOccurs="0" name="date" type="xs:dateTime"/>
<xs:element name="oid" type="xs:long"/>
<xs:element name="projectId" type="xs:long"/>
<xs:element name="revisionId" type="xs:long"/>
<xs:element name="userId" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="migrateDatabase">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="migrateDatabaseResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="isSettingAllowUsersToCreateTopLevelProjects">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="isSettingAllowUsersToCreateTopLevelProjectsResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="changePassword">
<xs:sequence>
<xs:element name="uoid" type="xs:long"/>
<xs:element minOccurs="0" name="oldPassword" type="xs:string"/>
<xs:element minOccurs="0" name="newPassword" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="changePasswordResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="changeUserType">
<xs:sequence>
<xs:element name="uoid" type="xs:long"/>
<xs:element minOccurs="0" name="userType" type="tns:sUserType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="changeUserTypeResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="logout">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="logoutResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSettingEmailSenderAddress">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSettingEmailSenderAddressResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getLastActive">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getLastActiveResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:dateTime"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sendClashesEmail">
<xs:sequence>
<xs:element minOccurs="0" name="sClashDetectionSettings" type="tns:sClashDetectionSettings"/>
<xs:element name="poid" type="xs:long"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="addressesTo" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sendClashesEmailResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getLogs">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getLogsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sLogAction"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sLogAction">
<xs:sequence>
<xs:element minOccurs="0" name="accessMethod" type="tns:sAccessMethod"/>
<xs:element minOccurs="0" name="date" type="xs:dateTime"/>
<xs:element name="executorId" type="xs:long"/>
<xs:element name="oid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSettingEnabledExportTypes">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSettingEnabledExportTypesResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getActiveSince">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getActiveSinceResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:dateTime"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteSerializer">
<xs:sequence>
<xs:element name="arg0" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteSerializerResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAllSerializers">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAllSerializersResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sSerializer"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addProjectAsSubProject">
<xs:sequence>
<xs:element minOccurs="0" name="projectName" type="xs:string"/>
<xs:element name="parentPoid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="addProjectAsSubProjectResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sProject"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="downloadByOids">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="roids" type="xs:long"/>
<xs:element maxOccurs="unbounded" minOccurs="0" name="oids" type="xs:long"/>
<xs:element minOccurs="0" name="formatIdentifier" type="xs:string"/>
<xs:element name="sync" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="downloadByOidsResponse">
<xs:sequence>
<xs:element name="return" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteIgnoreFile">
<xs:sequence>
<xs:element name="arg0" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteIgnoreFileResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="autologin">
<xs:sequence>
<xs:element minOccurs="0" name="username" type="xs:string"/>
<xs:element minOccurs="0" name="hash" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="autologinResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllCheckoutsByUser">
<xs:sequence>
<xs:element name="uoid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllCheckoutsByUserResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sCheckout"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="isSettingSendConfirmationEmailAfterRegistration">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="isSettingSendConfirmationEmailAfterRegistrationResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingCheckinMergingEnabled">
<xs:sequence>
<xs:element name="checkinMergingEnabled" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingCheckinMergingEnabledResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAllCheckoutsOfRevision">
<xs:sequence>
<xs:element name="roid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllCheckoutsOfRevisionResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sCheckout"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateRevision">
<xs:sequence>
<xs:element minOccurs="0" name="sRevision" type="tns:sRevision"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateRevisionResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="findClashesByGuid">
<xs:sequence>
<xs:element minOccurs="0" name="sClashDetectionSettings" type="tns:sClashDetectionSettings"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="findClashesByGuidResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sGuidClash"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sGuidClash">
<xs:complexContent>
<xs:extension base="tns:sClash">
<xs:sequence>
<xs:element minOccurs="0" name="guid1" type="xs:string"/>
<xs:element minOccurs="0" name="guid2" type="xs:string"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="sClash">
<xs:sequence>
<xs:element minOccurs="0" name="name1" type="xs:string"/>
<xs:element minOccurs="0" name="name2" type="xs:string"/>
<xs:element name="oid" type="xs:long"/>
<xs:element name="revision1Id" type="xs:long"/>
<xs:element name="revision2Id" type="xs:long"/>
<xs:element minOccurs="0" name="type1" type="xs:string"/>
<xs:element minOccurs="0" name="type2" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="isSettingShowVersionUpgradeAvailable">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="isSettingShowVersionUpgradeAvailableResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingAllowSelfRegistration">
<xs:sequence>
<xs:element name="allowSelfRegistration" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingAllowSelfRegistrationResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="isSettingCheckinMergingEnabled">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="isSettingCheckinMergingEnabledResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getDatabaseInformation">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getDatabaseInformationResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:databaseInformation"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="databaseInformation">
<xs:sequence>
<xs:element minOccurs="0" name="created" type="xs:dateTime"/>
<xs:element name="databaseSizeInBytes" type="xs:long"/>
<xs:element minOccurs="0" name="location" type="xs:string"/>
<xs:element name="numberOfCheckouts" type="xs:int"/>
<xs:element name="numberOfProjects" type="xs:int"/>
<xs:element name="numberOfRevisions" type="xs:int"/>
<xs:element name="numberOfUsers" type="xs:int"/>
<xs:element name="schemaVersion" type="xs:int"/>
<xs:element minOccurs="0" name="type" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="downloadProjects">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="roids" type="xs:long"/>
<xs:element minOccurs="0" name="formatIdentifier" type="xs:string"/>
<xs:element name="sync" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="downloadProjectsResponse">
<xs:sequence>
<xs:element name="return" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getClashDetectionSettings">
<xs:sequence>
<xs:element name="cdsoid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getClashDetectionSettingsResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sClashDetectionSettings"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateProject">
<xs:sequence>
<xs:element minOccurs="0" name="sProject" type="tns:sProject"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="updateProjectResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="setSettingCacheOutputFiles">
<xs:sequence>
<xs:element name="cacheOutputFiles" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingCacheOutputFilesResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSettingCustomLogoAddress">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSettingCustomLogoAddressResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="download">
<xs:sequence>
<xs:element name="roid" type="xs:long"/>
<xs:element minOccurs="0" name="formatIdentifier" type="xs:string"/>
<xs:element name="sync" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="downloadResponse">
<xs:sequence>
<xs:element name="return" type="xs:int"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSubProjects">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSubProjectsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sProject"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="isSettingAutoTestClashes">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="isSettingAutoTestClashesResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllCheckoutsOfProject">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllCheckoutsOfProjectResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sCheckout"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingMergeIdentifier">
<xs:sequence>
<xs:element minOccurs="0" name="mergeIdentifier" type="tns:sMergeIdentifier"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingMergeIdentifierResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getIgnoreFileById">
<xs:sequence>
<xs:element name="arg0" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getIgnoreFileByIdResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sIgnoreFile"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllReadableProjects">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAllReadableProjectsResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sProject"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteProject">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="deleteProjectResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="isSettingCacheOutputFiles">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="isSettingCacheOutputFilesResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllNonAuthorizedUsersOfProject">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllNonAuthorizedUsersOfProjectResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sUser"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getDataObjectByOid">
<xs:sequence>
<xs:element name="roid" type="xs:long"/>
<xs:element name="oid" type="xs:long"/>
<xs:element minOccurs="0" name="className" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getDataObjectByOidResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sDataObject"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllAuthorizedUsersOfProject">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllAuthorizedUsersOfProjectResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sUser"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="findClashesByEid">
<xs:sequence>
<xs:element minOccurs="0" name="sClashDetectionSettings" type="tns:sClashDetectionSettings"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="findClashesByEidResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sEidClash"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sEidClash">
<xs:complexContent>
<xs:extension base="tns:sClash">
<xs:sequence>
<xs:element name="eid1" type="xs:long"/>
<xs:element name="eid2" type="xs:long"/>
</xs:sequence>
</xs:extension>
</xs:complexContent>
</xs:complexType>
<xs:complexType name="compare">
<xs:sequence>
<xs:element name="roid1" type="xs:long"/>
<xs:element name="roid2" type="xs:long"/>
<xs:element minOccurs="0" name="sCompareType" type="tns:sCompareType"/>
<xs:element minOccurs="0" name="sCompareIdentifier" type="tns:sCompareIdentifier"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="compareResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sCompareResult"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sCompareResult">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getLastClashes">
<xs:sequence>
<xs:element name="roid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getLastClashesResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sClash"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getAllUsers">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getAllUsersResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sUser"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getCurrentUser">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getCurrentUserResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sUser"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="undeleteProject">
<xs:sequence>
<xs:element name="poid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="undeleteProjectResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getDataObjectsByType">
<xs:sequence>
<xs:element name="roid" type="xs:long"/>
<xs:element minOccurs="0" name="className" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getDataObjectsByTypeResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sDataObject"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="login">
<xs:sequence>
<xs:element minOccurs="0" name="username" type="xs:string"/>
<xs:element minOccurs="0" name="password" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="loginResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ping">
<xs:sequence>
<xs:element minOccurs="0" name="in" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="pingResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sendCompareEmail">
<xs:sequence>
<xs:element minOccurs="0" name="sCompareType" type="tns:sCompareType"/>
<xs:element minOccurs="0" name="sCompareIdentifier" type="tns:sCompareIdentifier"/>
<xs:element name="poid" type="xs:long"/>
<xs:element name="roid1" type="xs:long"/>
<xs:element name="roid2" type="xs:long"/>
<xs:element minOccurs="0" name="address" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="sendCompareEmailResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="validateAccount">
<xs:sequence>
<xs:element name="uoid" type="xs:long"/>
<xs:element minOccurs="0" name="token" type="xs:string"/>
<xs:element minOccurs="0" name="password" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="validateAccountResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="setSettingHeaderAddition">
<xs:sequence>
<xs:element minOccurs="0" name="headerAddition" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="setSettingHeaderAdditionResponse">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSettingSiteAddress">
<xs:sequence/>
</xs:complexType>
<xs:complexType name="getSettingSiteAddressResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeUserFromProject">
<xs:sequence>
<xs:element name="uoid" type="xs:long"/>
<xs:element name="poid" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="removeUserFromProjectResponse">
<xs:sequence>
<xs:element name="return" type="xs:boolean"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSerializerById">
<xs:sequence>
<xs:element name="arg0" type="xs:long"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getSerializerByIdResponse">
<xs:sequence>
<xs:element minOccurs="0" name="return" type="tns:sSerializer"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProjectByName">
<xs:sequence>
<xs:element minOccurs="0" name="name" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="getProjectByNameResponse">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:sProject"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="ssiPrefix">
<xs:restriction base="xs:string">
<xs:enumeration value="meter"/>
<xs:enumeration value="attometer"/>
<xs:enumeration value="femtometer"/>
<xs:enumeration value="picometer"/>
<xs:enumeration value="nanometer"/>
<xs:enumeration value="micrometer"/>
<xs:enumeration value="millimeter"/>
<xs:enumeration value="centimeter"/>
<xs:enumeration value="decimeter"/>
<xs:enumeration value="decameter"/>
<xs:enumeration value="hectometer"/>
<xs:enumeration value="kilometer"/>
<xs:enumeration value="megameter"/>
<xs:enumeration value="gigameter"/>
<xs:enumeration value="terameter"/>
<xs:enumeration value="petameter"/>
<xs:enumeration value="exameter"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="sObjectState">
<xs:restriction base="xs:string">
<xs:enumeration value="ACTIVE"/>
<xs:enumeration value="DELETED"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="sCheckinState">
<xs:restriction base="xs:string">
<xs:enumeration value="UPLOADING"/>
<xs:enumeration value="PARSING"/>
<xs:enumeration value="STORING"/>
<xs:enumeration value="SEARCHING_CLASHES"/>
<xs:enumeration value="DONE"/>
<xs:enumeration value="ERROR"/>
<xs:enumeration value="CLASHES_ERROR"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="sUserType">
<xs:restriction base="xs:string">
<xs:enumeration value="SYSTEM"/>
<xs:enumeration value="ADMIN"/>
<xs:enumeration value="USER"/>
<xs:enumeration value="ANONYMOUS"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="actionState">
<xs:restriction base="xs:string">
<xs:enumeration value="UNKNOWN"/>
<xs:enumeration value="STARTED"/>
<xs:enumeration value="FINISHED"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="sMergeIdentifier">
<xs:restriction base="xs:string">
<xs:enumeration value="NAME"/>
<xs:enumeration value="GUID"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="sAccessMethod">
<xs:restriction base="xs:string">
<xs:enumeration value="SOAP"/>
<xs:enumeration value="WEB_INTERFACE"/>
<xs:enumeration value="INTERNAL"/>
<xs:enumeration value="REST"/>
<xs:enumeration value="SYNDICATION"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="sCompareType">
<xs:restriction base="xs:string">
<xs:enumeration value="ALL"/>
<xs:enumeration value="ADD"/>
<xs:enumeration value="MODIFY"/>
<xs:enumeration value="DELETE"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="sCompareIdentifier">
<xs:restriction base="xs:string">
<xs:enumeration value="GUID_ID"/>
<xs:enumeration value="NAME_ID"/>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="UserException">
<xs:sequence>
<xs:element name="fullMessage" nillable="true" type="xs:string"/>
<xs:element name="userMessage" nillable="true" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:element name="UserException" type="tns:UserException"/>
<xs:complexType name="ServerException">
<xs:sequence>
<xs:element name="fullMessage" nillable="true" type="xs:string"/>
<xs:element name="userMessage" nillable="true" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:element name="ServerException" type="tns:ServerException"/>
<xs:complexType name="ServiceException">
<xs:sequence>
<xs:element name="fullMessage" nillable="true" type="xs:string"/>
<xs:element name="userMessage" nillable="true" type="xs:string"/>
</xs:sequence>
</xs:complexType>
<xs:element name="ServiceException" type="tns:ServiceException"/>
</xs:schema>
  </wsdl:types>
  <wsdl:message name="setSettingIntelligentMerging">
    <wsdl:part name="parameters" element="tns:setSettingIntelligentMerging">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeUserFromProjectResponse">
    <wsdl:part name="parameters" element="tns:removeUserFromProjectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingEmailSenderAddress">
    <wsdl:part name="parameters" element="tns:getSettingEmailSenderAddress">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveSince">
    <wsdl:part name="parameters" element="tns:getActiveSince">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingAllowUsersToCreateTopLevelProjects">
    <wsdl:part name="parameters" element="tns:isSettingAllowUsersToCreateTopLevelProjects">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingEmailSenderAddressResponse">
    <wsdl:part name="parameters" element="tns:getSettingEmailSenderAddressResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkoutResponse">
    <wsdl:part name="parameters" element="tns:checkoutResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="autologinResponse">
    <wsdl:part name="parameters" element="tns:autologinResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isLoggedInResponse">
    <wsdl:part name="parameters" element="tns:isLoggedInResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrentToken">
    <wsdl:part name="parameters" element="tns:getCurrentToken">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingSmtpServer">
    <wsdl:part name="parameters" element="tns:getSettingSmtpServer">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoggedInUserResponse">
    <wsdl:part name="parameters" element="tns:getLoggedInUserResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addIgnoreFile">
    <wsdl:part name="parameters" element="tns:addIgnoreFile">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateClashDetectionSettings">
    <wsdl:part name="parameters" element="tns:updateClashDetectionSettings">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveUserSessions">
    <wsdl:part name="parameters" element="tns:getActiveUserSessions">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLastDatabaseReset">
    <wsdl:part name="parameters" element="tns:getLastDatabaseReset">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCheckoutWarnings">
    <wsdl:part name="parameters" element="tns:getCheckoutWarnings">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setRevisionTag">
    <wsdl:part name="parameters" element="tns:setRevisionTag">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getIgnoreFileById">
    <wsdl:part name="parameters" element="tns:getIgnoreFileById">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllRevisionsByUser">
    <wsdl:part name="parameters" element="tns:getAllRevisionsByUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllNonAuthorizedUsersOfProjectResponse">
    <wsdl:part name="parameters" element="tns:getAllNonAuthorizedUsersOfProjectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendCompareEmail">
    <wsdl:part name="parameters" element="tns:sendCompareEmail">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loginAnonymous">
    <wsdl:part name="parameters" element="tns:loginAnonymous">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMigrations">
    <wsdl:part name="parameters" element="tns:getMigrations">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingSendConfirmationEmailAfterRegistration">
    <wsdl:part name="parameters" element="tns:isSettingSendConfirmationEmailAfterRegistration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendClashesEmailResponse">
    <wsdl:part name="parameters" element="tns:sendClashesEmailResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateProject">
    <wsdl:part name="parameters" element="tns:updateProject">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getMigrationsResponse">
    <wsdl:part name="parameters" element="tns:getMigrationsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteProject">
    <wsdl:part name="parameters" element="tns:deleteProject">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingMergeIdentifier">
    <wsdl:part name="parameters" element="tns:setSettingMergeIdentifier">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllIgnoreFiles">
    <wsdl:part name="parameters" element="tns:getAllIgnoreFiles">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllIgnoreFilesResponse">
    <wsdl:part name="parameters" element="tns:getAllIgnoreFilesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClashDetectionSettings">
    <wsdl:part name="parameters" element="tns:getClashDetectionSettings">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveUserSessionsResponse">
    <wsdl:part name="parameters" element="tns:getActiveUserSessionsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUserToProject">
    <wsdl:part name="parameters" element="tns:addUserToProject">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveSinceResponse">
    <wsdl:part name="parameters" element="tns:getActiveSinceResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableClassesResponse">
    <wsdl:part name="parameters" element="tns:getAvailableClassesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateClashDetectionSettingsResponse">
    <wsdl:part name="parameters" element="tns:updateClashDetectionSettingsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllSerializerClassNames">
    <wsdl:part name="parameters" element="tns:getAllSerializerClassNames">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGeoTagResponse">
    <wsdl:part name="parameters" element="tns:getGeoTagResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLoggedInUser">
    <wsdl:part name="parameters" element="tns:getLoggedInUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResultTypeByNameResponse">
    <wsdl:part name="parameters" element="tns:getResultTypeByNameResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingSmtpServerResponse">
    <wsdl:part name="parameters" element="tns:getSettingSmtpServerResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingHeaderAdditionResponse">
    <wsdl:part name="parameters" element="tns:setSettingHeaderAdditionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLastActiveResponse">
    <wsdl:part name="parameters" element="tns:getLastActiveResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSerializerResponse">
    <wsdl:part name="parameters" element="tns:updateSerializerResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingAutoTestClashesResponse">
    <wsdl:part name="parameters" element="tns:setSettingAutoTestClashesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingFooterAdditionResponse">
    <wsdl:part name="parameters" element="tns:getSettingFooterAdditionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingSmtpServerResponse">
    <wsdl:part name="parameters" element="tns:setSettingSmtpServerResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSubProjects">
    <wsdl:part name="parameters" element="tns:getSubProjects">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setExportTypeEnabledResponse">
    <wsdl:part name="parameters" element="tns:setExportTypeEnabledResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllSerializerClassNamesResponse">
    <wsdl:part name="parameters" element="tns:getAllSerializerClassNamesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSerializerByIdResponse">
    <wsdl:part name="parameters" element="tns:getSerializerByIdResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="downloadProjects">
    <wsdl:part name="parameters" element="tns:downloadProjects">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRevisionSummary">
    <wsdl:part name="parameters" element="tns:getRevisionSummary">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDownloadData">
    <wsdl:part name="parameters" element="tns:getDownloadData">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="userHasCheckinRights">
    <wsdl:part name="parameters" element="tns:userHasCheckinRights">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingMergeIdentifier">
    <wsdl:part name="parameters" element="tns:getSettingMergeIdentifier">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDatabaseInformationResponse">
    <wsdl:part name="parameters" element="tns:getDatabaseInformationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="login">
    <wsdl:part name="parameters" element="tns:login">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateGeoTagResponse">
    <wsdl:part name="parameters" element="tns:updateGeoTagResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingRegistrationAdditionResponse">
    <wsdl:part name="parameters" element="tns:getSettingRegistrationAdditionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDownloadState">
    <wsdl:part name="parameters" element="tns:getDownloadState">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getGeoTag">
    <wsdl:part name="parameters" element="tns:getGeoTag">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ServiceException">
    <wsdl:part name="ServiceException" element="tns:ServiceException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteProjectResponse">
    <wsdl:part name="parameters" element="tns:deleteProjectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrentTokenResponse">
    <wsdl:part name="parameters" element="tns:getCurrentTokenResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isResultTypeEnabledResponse">
    <wsdl:part name="parameters" element="tns:isResultTypeEnabledResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingCacheOutputFiles">
    <wsdl:part name="parameters" element="tns:setSettingCacheOutputFiles">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingAllowSelfRegistrationResponse">
    <wsdl:part name="parameters" element="tns:isSettingAllowSelfRegistrationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="download">
    <wsdl:part name="parameters" element="tns:download">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllProjectsResponse">
    <wsdl:part name="parameters" element="tns:getAllProjectsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="downloadOfTypeResponse">
    <wsdl:part name="parameters" element="tns:downloadOfTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingAutoTestClashes">
    <wsdl:part name="parameters" element="tns:setSettingAutoTestClashes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllCheckoutsOfProjectAndSubProjectsResponse">
    <wsdl:part name="parameters" element="tns:getAllCheckoutsOfProjectAndSubProjectsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSerializerById">
    <wsdl:part name="parameters" element="tns:getSerializerById">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAccessMethod">
    <wsdl:part name="parameters" element="tns:getAccessMethod">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingMergeIdentifierResponse">
    <wsdl:part name="parameters" element="tns:setSettingMergeIdentifierResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingCustomLogoAddress">
    <wsdl:part name="parameters" element="tns:setSettingCustomLogoAddress">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDataObjectByOid">
    <wsdl:part name="parameters" element="tns:getDataObjectByOid">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRevision">
    <wsdl:part name="parameters" element="tns:getRevision">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingAllowUsersToCreateTopLevelProjectsResponse">
    <wsdl:part name="parameters" element="tns:setSettingAllowUsersToCreateTopLevelProjectsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="downloadByGuids">
    <wsdl:part name="parameters" element="tns:downloadByGuids">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingHeaderAdditionResponse">
    <wsdl:part name="parameters" element="tns:getSettingHeaderAdditionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="userHasCheckinRightsResponse">
    <wsdl:part name="parameters" element="tns:userHasCheckinRightsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingFooterAddition">
    <wsdl:part name="parameters" element="tns:getSettingFooterAddition">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCheckoutWarningsResponse">
    <wsdl:part name="parameters" element="tns:getCheckoutWarningsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loginResponse">
    <wsdl:part name="parameters" element="tns:loginResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserByUoid">
    <wsdl:part name="parameters" element="tns:getUserByUoid">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findClashesByEidResponse">
    <wsdl:part name="parameters" element="tns:findClashesByEidResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllCheckoutsOfRevision">
    <wsdl:part name="parameters" element="tns:getAllCheckoutsOfRevision">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingAllowUsersToCreateTopLevelProjects">
    <wsdl:part name="parameters" element="tns:setSettingAllowUsersToCreateTopLevelProjects">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingAllowSelfRegistration">
    <wsdl:part name="parameters" element="tns:setSettingAllowSelfRegistration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingAllowSelfRegistrationResponse">
    <wsdl:part name="parameters" element="tns:setSettingAllowSelfRegistrationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="undeleteProject">
    <wsdl:part name="parameters" element="tns:undeleteProject">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingEnabledExportTypes">
    <wsdl:part name="parameters" element="tns:setSettingEnabledExportTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingShowVersionUpgradeAvailableResponse">
    <wsdl:part name="parameters" element="tns:setSettingShowVersionUpgradeAvailableResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingSiteAddressResponse">
    <wsdl:part name="parameters" element="tns:setSettingSiteAddressResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingCacheOutputFiles">
    <wsdl:part name="parameters" element="tns:isSettingCacheOutputFiles">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addIgnoreFileResponse">
    <wsdl:part name="parameters" element="tns:addIgnoreFileResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrentUser">
    <wsdl:part name="parameters" element="tns:getCurrentUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateProjectResponse">
    <wsdl:part name="parameters" element="tns:updateProjectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateIgnoreFile">
    <wsdl:part name="parameters" element="tns:updateIgnoreFile">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="undeleteUserResponse">
    <wsdl:part name="parameters" element="tns:undeleteUserResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllCheckoutsOfProject">
    <wsdl:part name="parameters" element="tns:getAllCheckoutsOfProject">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setupResponse">
    <wsdl:part name="parameters" element="tns:setupResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllRevisionsOfProjectResponse">
    <wsdl:part name="parameters" element="tns:getAllRevisionsOfProjectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingRegistrationAddition">
    <wsdl:part name="parameters" element="tns:getSettingRegistrationAddition">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRevisionSummaryResponse">
    <wsdl:part name="parameters" element="tns:getRevisionSummaryResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="changePasswordResponse">
    <wsdl:part name="parameters" element="tns:changePasswordResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkinAsync">
    <wsdl:part name="parameters" element="tns:checkinAsync">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingCustomLogoAddress">
    <wsdl:part name="parameters" element="tns:getSettingCustomLogoAddress">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingEnabledExportTypesResponse">
    <wsdl:part name="parameters" element="tns:getSettingEnabledExportTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ServerException">
    <wsdl:part name="ServerException" element="tns:ServerException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllSerializersResponse">
    <wsdl:part name="parameters" element="tns:getAllSerializersResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUsers">
    <wsdl:part name="parameters" element="tns:getAllUsers">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="changeUserTypeResponse">
    <wsdl:part name="parameters" element="tns:changeUserTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllCheckoutsOfRevisionResponse">
    <wsdl:part name="parameters" element="tns:getAllCheckoutsOfRevisionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllRevisionsOfProject">
    <wsdl:part name="parameters" element="tns:getAllRevisionsOfProject">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingEmailSenderAddressResponse">
    <wsdl:part name="parameters" element="tns:setSettingEmailSenderAddressResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAccessMethodResponse">
    <wsdl:part name="parameters" element="tns:getAccessMethodResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingSiteAddressResponse">
    <wsdl:part name="parameters" element="tns:getSettingSiteAddressResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEnabledResultTypesResponse">
    <wsdl:part name="parameters" element="tns:getEnabledResultTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUserResponse">
    <wsdl:part name="parameters" element="tns:addUserResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingIntelligentMerging">
    <wsdl:part name="parameters" element="tns:isSettingIntelligentMerging">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUser">
    <wsdl:part name="parameters" element="tns:addUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRevisionResponse">
    <wsdl:part name="parameters" element="tns:updateRevisionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendClashesEmail">
    <wsdl:part name="parameters" element="tns:sendClashesEmail">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteIgnoreFileResponse">
    <wsdl:part name="parameters" element="tns:deleteIgnoreFileResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserByUoidResponse">
    <wsdl:part name="parameters" element="tns:getUserByUoidResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingSendConfirmationEmailAfterRegistrationResponse">
    <wsdl:part name="parameters" element="tns:setSettingSendConfirmationEmailAfterRegistrationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingRegistrationAdditionResponse">
    <wsdl:part name="parameters" element="tns:setSettingRegistrationAdditionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="downloadByOidsResponse">
    <wsdl:part name="parameters" element="tns:downloadByOidsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDownloadDataResponse">
    <wsdl:part name="parameters" element="tns:getDownloadDataResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteSerializer">
    <wsdl:part name="parameters" element="tns:deleteSerializer">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setExportTypeEnabled">
    <wsdl:part name="parameters" element="tns:setExportTypeEnabled">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateSerializer">
    <wsdl:part name="parameters" element="tns:updateSerializer">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLogsResponse">
    <wsdl:part name="parameters" element="tns:getLogsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingCacheOutputFilesResponse">
    <wsdl:part name="parameters" element="tns:isSettingCacheOutputFilesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProjectByPoid">
    <wsdl:part name="parameters" element="tns:getProjectByPoid">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLastDatabaseResetResponse">
    <wsdl:part name="parameters" element="tns:getLastDatabaseResetResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getRevisionResponse">
    <wsdl:part name="parameters" element="tns:getRevisionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSubProjectsResponse">
    <wsdl:part name="parameters" element="tns:getSubProjectsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingCacheOutputFilesResponse">
    <wsdl:part name="parameters" element="tns:setSettingCacheOutputFilesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingHeaderAddition">
    <wsdl:part name="parameters" element="tns:getSettingHeaderAddition">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLastClashes">
    <wsdl:part name="parameters" element="tns:getLastClashes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setup">
    <wsdl:part name="parameters" element="tns:setup">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="branchToNewProject">
    <wsdl:part name="parameters" element="tns:branchToNewProject">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteSerializerResponse">
    <wsdl:part name="parameters" element="tns:deleteSerializerResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDataObjectsByType">
    <wsdl:part name="parameters" element="tns:getDataObjectsByType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addSerializer">
    <wsdl:part name="parameters" element="tns:addSerializer">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="autologin">
    <wsdl:part name="parameters" element="tns:autologin">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findClashesByEid">
    <wsdl:part name="parameters" element="tns:findClashesByEid">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingCheckinMergingEnabledResponse">
    <wsdl:part name="parameters" element="tns:isSettingCheckinMergingEnabledResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestPasswordChangeResponse">
    <wsdl:part name="parameters" element="tns:requestPasswordChangeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addProjectAsSubProject">
    <wsdl:part name="parameters" element="tns:addProjectAsSubProject">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllRevisionsByUserResponse">
    <wsdl:part name="parameters" element="tns:getAllRevisionsByUserResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllNonAuthorizedProjectsOfUserResponse">
    <wsdl:part name="parameters" element="tns:getAllNonAuthorizedProjectsOfUserResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="sendCompareEmailResponse">
    <wsdl:part name="parameters" element="tns:sendCompareEmailResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDatabaseInformation">
    <wsdl:part name="parameters" element="tns:getDatabaseInformation">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllNonAuthorizedProjectsOfUser">
    <wsdl:part name="parameters" element="tns:getAllNonAuthorizedProjectsOfUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addProjectAsSubProjectResponse">
    <wsdl:part name="parameters" element="tns:addProjectAsSubProjectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="undeleteProjectResponse">
    <wsdl:part name="parameters" element="tns:undeleteProjectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingSendConfirmationEmailAfterRegistrationResponse">
    <wsdl:part name="parameters" element="tns:isSettingSendConfirmationEmailAfterRegistrationResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="branchToNewProjectResponse">
    <wsdl:part name="parameters" element="tns:branchToNewProjectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingShowVersionUpgradeAvailableResponse">
    <wsdl:part name="parameters" element="tns:isSettingShowVersionUpgradeAvailableResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingAutoTestClashes">
    <wsdl:part name="parameters" element="tns:isSettingAutoTestClashes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="undeleteUser">
    <wsdl:part name="parameters" element="tns:undeleteUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEnabledResultTypes">
    <wsdl:part name="parameters" element="tns:getEnabledResultTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAnonymousUser">
    <wsdl:part name="parameters" element="tns:getAnonymousUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="downloadByOids">
    <wsdl:part name="parameters" element="tns:downloadByOids">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteUser">
    <wsdl:part name="parameters" element="tns:deleteUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLastClashesResponse">
    <wsdl:part name="parameters" element="tns:getLastClashesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="userHasRightsResponse">
    <wsdl:part name="parameters" element="tns:userHasRightsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingShowVersionUpgradeAvailable">
    <wsdl:part name="parameters" element="tns:setSettingShowVersionUpgradeAvailable">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllCheckoutsByUserResponse">
    <wsdl:part name="parameters" element="tns:getAllCheckoutsByUserResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUsersProjects">
    <wsdl:part name="parameters" element="tns:getUsersProjects">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkoutLastRevision">
    <wsdl:part name="parameters" element="tns:checkoutLastRevision">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkout">
    <wsdl:part name="parameters" element="tns:checkout">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllCheckoutsOfProjectResponse">
    <wsdl:part name="parameters" element="tns:getAllCheckoutsOfProjectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingShowVersionUpgradeAvailable">
    <wsdl:part name="parameters" element="tns:isSettingShowVersionUpgradeAvailable">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLastActive">
    <wsdl:part name="parameters" element="tns:getLastActive">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingIntelligentMergingResponse">
    <wsdl:part name="parameters" element="tns:setSettingIntelligentMergingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="branchToExistingProject">
    <wsdl:part name="parameters" element="tns:branchToExistingProject">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findClashesByGuidResponse">
    <wsdl:part name="parameters" element="tns:findClashesByGuidResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getClashDetectionSettingsResponse">
    <wsdl:part name="parameters" element="tns:getClashDetectionSettingsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProjectByPoidResponse">
    <wsdl:part name="parameters" element="tns:getProjectByPoidResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addSerializerResponse">
    <wsdl:part name="parameters" element="tns:addSerializerResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDataObjectsByTypeResponse">
    <wsdl:part name="parameters" element="tns:getDataObjectsByTypeResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllProjects">
    <wsdl:part name="parameters" element="tns:getAllProjects">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addProject">
    <wsdl:part name="parameters" element="tns:addProject">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkinAsyncResponse">
    <wsdl:part name="parameters" element="tns:checkinAsyncResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingEnabledExportTypes">
    <wsdl:part name="parameters" element="tns:getSettingEnabledExportTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllAuthorizedUsersOfProjectResponse">
    <wsdl:part name="parameters" element="tns:getAllAuthorizedUsersOfProjectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUsersResponse">
    <wsdl:part name="parameters" element="tns:getAllUsersResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAnonymousUserResponse">
    <wsdl:part name="parameters" element="tns:getAnonymousUserResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllSerializers">
    <wsdl:part name="parameters" element="tns:getAllSerializers">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="logoutResponse">
    <wsdl:part name="parameters" element="tns:logoutResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setRevisionTagResponse">
    <wsdl:part name="parameters" element="tns:setRevisionTagResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingCheckinMergingEnabledResponse">
    <wsdl:part name="parameters" element="tns:setSettingCheckinMergingEnabledResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingCustomLogoAddressResponse">
    <wsdl:part name="parameters" element="tns:getSettingCustomLogoAddressResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="migrateDatabase">
    <wsdl:part name="parameters" element="tns:migrateDatabase">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isLoggedIn">
    <wsdl:part name="parameters" element="tns:isLoggedIn">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="logout">
    <wsdl:part name="parameters" element="tns:logout">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateGeoTag">
    <wsdl:part name="parameters" element="tns:updateGeoTag">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingIntelligentMergingResponse">
    <wsdl:part name="parameters" element="tns:isSettingIntelligentMergingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getResultTypeByName">
    <wsdl:part name="parameters" element="tns:getResultTypeByName">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="migrateDatabaseResponse">
    <wsdl:part name="parameters" element="tns:migrateDatabaseResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDataObjectByGuid">
    <wsdl:part name="parameters" element="tns:getDataObjectByGuid">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllCheckoutsOfProjectAndSubProjects">
    <wsdl:part name="parameters" element="tns:getAllCheckoutsOfProjectAndSubProjects">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingAllowSelfRegistration">
    <wsdl:part name="parameters" element="tns:isSettingAllowSelfRegistration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllReadableProjectsResponse">
    <wsdl:part name="parameters" element="tns:getAllReadableProjectsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingSiteAddress">
    <wsdl:part name="parameters" element="tns:getSettingSiteAddress">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllAuthorizedUsersOfProject">
    <wsdl:part name="parameters" element="tns:getAllAuthorizedUsersOfProject">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkoutLastRevisionResponse">
    <wsdl:part name="parameters" element="tns:checkoutLastRevisionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingEmailSenderAddress">
    <wsdl:part name="parameters" element="tns:setSettingEmailSenderAddress">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingSiteAddress">
    <wsdl:part name="parameters" element="tns:setSettingSiteAddress">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getIgnoreFileByIdResponse">
    <wsdl:part name="parameters" element="tns:getIgnoreFileByIdResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingCheckinMergingEnabled">
    <wsdl:part name="parameters" element="tns:setSettingCheckinMergingEnabled">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingAutoTestClashesResponse">
    <wsdl:part name="parameters" element="tns:isSettingAutoTestClashesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveLongActions">
    <wsdl:part name="parameters" element="tns:getActiveLongActions">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="downloadResponse">
    <wsdl:part name="parameters" element="tns:downloadResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="pingResponse">
    <wsdl:part name="parameters" element="tns:pingResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserByUserNameResponse">
    <wsdl:part name="parameters" element="tns:getUserByUserNameResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteUserResponse">
    <wsdl:part name="parameters" element="tns:deleteUserResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeUserFromProject">
    <wsdl:part name="parameters" element="tns:removeUserFromProject">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingHeaderAddition">
    <wsdl:part name="parameters" element="tns:setSettingHeaderAddition">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="requestPasswordChange">
    <wsdl:part name="parameters" element="tns:requestPasswordChange">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingRegistrationAddition">
    <wsdl:part name="parameters" element="tns:setSettingRegistrationAddition">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllNonAuthorizedUsersOfProject">
    <wsdl:part name="parameters" element="tns:getAllNonAuthorizedUsersOfProject">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="branchToExistingProjectResponse">
    <wsdl:part name="parameters" element="tns:branchToExistingProjectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateAccountResponse">
    <wsdl:part name="parameters" element="tns:validateAccountResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addProjectResponse">
    <wsdl:part name="parameters" element="tns:addProjectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="loginAnonymousResponse">
    <wsdl:part name="parameters" element="tns:loginAnonymousResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAvailableClasses">
    <wsdl:part name="parameters" element="tns:getAvailableClasses">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllCheckoutsByUser">
    <wsdl:part name="parameters" element="tns:getAllCheckoutsByUser">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDownloadStateResponse">
    <wsdl:part name="parameters" element="tns:getDownloadStateResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUsersProjectsResponse">
    <wsdl:part name="parameters" element="tns:getUsersProjectsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkinSync">
    <wsdl:part name="parameters" element="tns:checkinSync">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getSettingMergeIdentifierResponse">
    <wsdl:part name="parameters" element="tns:getSettingMergeIdentifierResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingCustomLogoAddressResponse">
    <wsdl:part name="parameters" element="tns:setSettingCustomLogoAddressResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingEnabledExportTypesResponse">
    <wsdl:part name="parameters" element="tns:setSettingEnabledExportTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="changePassword">
    <wsdl:part name="parameters" element="tns:changePassword">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDataObjectByOidResponse">
    <wsdl:part name="parameters" element="tns:getDataObjectByOidResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllResultTypes">
    <wsdl:part name="parameters" element="tns:getAllResultTypes">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="deleteIgnoreFile">
    <wsdl:part name="parameters" element="tns:deleteIgnoreFile">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllResultTypesResponse">
    <wsdl:part name="parameters" element="tns:getAllResultTypesResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="compare">
    <wsdl:part name="parameters" element="tns:compare">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllReadableProjects">
    <wsdl:part name="parameters" element="tns:getAllReadableProjects">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingFooterAdditionResponse">
    <wsdl:part name="parameters" element="tns:setSettingFooterAdditionResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="findClashesByGuid">
    <wsdl:part name="parameters" element="tns:findClashesByGuid">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="downloadProjectsResponse">
    <wsdl:part name="parameters" element="tns:downloadProjectsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="changeUserType">
    <wsdl:part name="parameters" element="tns:changeUserType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="validateAccount">
    <wsdl:part name="parameters" element="tns:validateAccount">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProjectByName">
    <wsdl:part name="parameters" element="tns:getProjectByName">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="downloadByGuidsResponse">
    <wsdl:part name="parameters" element="tns:downloadByGuidsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getLogs">
    <wsdl:part name="parameters" element="tns:getLogs">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserByUserName">
    <wsdl:part name="parameters" element="tns:getUserByUserName">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateRevision">
    <wsdl:part name="parameters" element="tns:updateRevision">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getCurrentUserResponse">
    <wsdl:part name="parameters" element="tns:getCurrentUserResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateIgnoreFileResponse">
    <wsdl:part name="parameters" element="tns:updateIgnoreFileResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingCheckinMergingEnabled">
    <wsdl:part name="parameters" element="tns:isSettingCheckinMergingEnabled">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkinSyncResponse">
    <wsdl:part name="parameters" element="tns:checkinSyncResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getDataObjectByGuidResponse">
    <wsdl:part name="parameters" element="tns:getDataObjectByGuidResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="ping">
    <wsdl:part name="parameters" element="tns:ping">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingSendConfirmationEmailAfterRegistration">
    <wsdl:part name="parameters" element="tns:setSettingSendConfirmationEmailAfterRegistration">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isResultTypeEnabled">
    <wsdl:part name="parameters" element="tns:isResultTypeEnabled">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getProjectByNameResponse">
    <wsdl:part name="parameters" element="tns:getProjectByNameResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="downloadOfType">
    <wsdl:part name="parameters" element="tns:downloadOfType">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="getActiveLongActionsResponse">
    <wsdl:part name="parameters" element="tns:getActiveLongActionsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUserToProjectResponse">
    <wsdl:part name="parameters" element="tns:addUserToProjectResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="UserException">
    <wsdl:part name="UserException" element="tns:UserException">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingSmtpServer">
    <wsdl:part name="parameters" element="tns:setSettingSmtpServer">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="compareResponse">
    <wsdl:part name="parameters" element="tns:compareResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="userHasRights">
    <wsdl:part name="parameters" element="tns:userHasRights">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="setSettingFooterAddition">
    <wsdl:part name="parameters" element="tns:setSettingFooterAddition">
    </wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSettingAllowUsersToCreateTopLevelProjectsResponse">
    <wsdl:part name="parameters" element="tns:isSettingAllowUsersToCreateTopLevelProjectsResponse">
    </wsdl:part>
  </wsdl:message>
  <wsdl:portType name="soap">
    <wsdl:operation name="getUsersProjects">
      <wsdl:input name="getUsersProjects" message="tns:getUsersProjects">
    </wsdl:input>
      <wsdl:output name="getUsersProjectsResponse" message="tns:getUsersProjectsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMigrations">
      <wsdl:input name="getMigrations" message="tns:getMigrations">
    </wsdl:input>
      <wsdl:output name="getMigrationsResponse" message="tns:getMigrationsResponse">
    </wsdl:output>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="userHasCheckinRights">
      <wsdl:input name="userHasCheckinRights" message="tns:userHasCheckinRights">
    </wsdl:input>
      <wsdl:output name="userHasCheckinRightsResponse" message="tns:userHasCheckinRightsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isResultTypeEnabled">
      <wsdl:input name="isResultTypeEnabled" message="tns:isResultTypeEnabled">
    </wsdl:input>
      <wsdl:output name="isResultTypeEnabledResponse" message="tns:isResultTypeEnabledResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDownloadData">
      <wsdl:input name="getDownloadData" message="tns:getDownloadData">
    </wsdl:input>
      <wsdl:output name="getDownloadDataResponse" message="tns:getDownloadDataResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCheckoutWarnings">
      <wsdl:input name="getCheckoutWarnings" message="tns:getCheckoutWarnings">
    </wsdl:input>
      <wsdl:output name="getCheckoutWarningsResponse" message="tns:getCheckoutWarningsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingEmailSenderAddress">
      <wsdl:input name="setSettingEmailSenderAddress" message="tns:setSettingEmailSenderAddress">
    </wsdl:input>
      <wsdl:output name="setSettingEmailSenderAddressResponse" message="tns:setSettingEmailSenderAddressResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingFooterAddition">
      <wsdl:input name="setSettingFooterAddition" message="tns:setSettingFooterAddition">
    </wsdl:input>
      <wsdl:output name="setSettingFooterAdditionResponse" message="tns:setSettingFooterAdditionResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingEnabledExportTypes">
      <wsdl:input name="setSettingEnabledExportTypes" message="tns:setSettingEnabledExportTypes">
    </wsdl:input>
      <wsdl:output name="setSettingEnabledExportTypesResponse" message="tns:setSettingEnabledExportTypesResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="undeleteUser">
      <wsdl:input name="undeleteUser" message="tns:undeleteUser">
    </wsdl:input>
      <wsdl:output name="undeleteUserResponse" message="tns:undeleteUserResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRevisionsOfProject">
      <wsdl:input name="getAllRevisionsOfProject" message="tns:getAllRevisionsOfProject">
    </wsdl:input>
      <wsdl:output name="getAllRevisionsOfProjectResponse" message="tns:getAllRevisionsOfProjectResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkinAsync">
      <wsdl:input name="checkinAsync" message="tns:checkinAsync">
    </wsdl:input>
      <wsdl:output name="checkinAsyncResponse" message="tns:checkinAsyncResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setup">
      <wsdl:input name="setup" message="tns:setup">
    </wsdl:input>
      <wsdl:output name="setupResponse" message="tns:setupResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllProjects">
      <wsdl:input name="getAllProjects" message="tns:getAllProjects">
    </wsdl:input>
      <wsdl:output name="getAllProjectsResponse" message="tns:getAllProjectsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loginAnonymous">
      <wsdl:input name="loginAnonymous" message="tns:loginAnonymous">
    </wsdl:input>
      <wsdl:output name="loginAnonymousResponse" message="tns:loginAnonymousResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isLoggedIn">
      <wsdl:input name="isLoggedIn" message="tns:isLoggedIn">
    </wsdl:input>
      <wsdl:output name="isLoggedInResponse" message="tns:isLoggedInResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRevisionTag">
      <wsdl:input name="setRevisionTag" message="tns:setRevisionTag">
    </wsdl:input>
      <wsdl:output name="setRevisionTagResponse" message="tns:setRevisionTagResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingCustomLogoAddress">
      <wsdl:input name="setSettingCustomLogoAddress" message="tns:setSettingCustomLogoAddress">
    </wsdl:input>
      <wsdl:output name="setSettingCustomLogoAddressResponse" message="tns:setSettingCustomLogoAddressResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserByUserName">
      <wsdl:input name="getUserByUserName" message="tns:getUserByUserName">
    </wsdl:input>
      <wsdl:output name="getUserByUserNameResponse" message="tns:getUserByUserNameResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <wsdl:input name="addUser" message="tns:addUser">
    </wsdl:input>
      <wsdl:output name="addUserResponse" message="tns:addUserResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingAllowUsersToCreateTopLevelProjects">
      <wsdl:input name="setSettingAllowUsersToCreateTopLevelProjects" message="tns:setSettingAllowUsersToCreateTopLevelProjects">
    </wsdl:input>
      <wsdl:output name="setSettingAllowUsersToCreateTopLevelProjectsResponse" message="tns:setSettingAllowUsersToCreateTopLevelProjectsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addProject">
      <wsdl:input name="addProject" message="tns:addProject">
    </wsdl:input>
      <wsdl:output name="addProjectResponse" message="tns:addProjectResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateSerializer">
      <wsdl:input name="updateSerializer" message="tns:updateSerializer">
    </wsdl:input>
      <wsdl:output name="updateSerializerResponse" message="tns:updateSerializerResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateGeoTag">
      <wsdl:input name="updateGeoTag" message="tns:updateGeoTag">
    </wsdl:input>
      <wsdl:output name="updateGeoTagResponse" message="tns:updateGeoTagResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDownloadState">
      <wsdl:input name="getDownloadState" message="tns:getDownloadState">
    </wsdl:input>
      <wsdl:output name="getDownloadStateResponse" message="tns:getDownloadStateResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingSmtpServer">
      <wsdl:input name="setSettingSmtpServer" message="tns:setSettingSmtpServer">
    </wsdl:input>
      <wsdl:output name="setSettingSmtpServerResponse" message="tns:setSettingSmtpServerResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingRegistrationAddition">
      <wsdl:input name="setSettingRegistrationAddition" message="tns:setSettingRegistrationAddition">
    </wsdl:input>
      <wsdl:output name="setSettingRegistrationAdditionResponse" message="tns:setSettingRegistrationAdditionResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingMergeIdentifier">
      <wsdl:input name="getSettingMergeIdentifier" message="tns:getSettingMergeIdentifier">
    </wsdl:input>
      <wsdl:output name="getSettingMergeIdentifierResponse" message="tns:getSettingMergeIdentifierResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveLongActions">
      <wsdl:input name="getActiveLongActions" message="tns:getActiveLongActions">
    </wsdl:input>
      <wsdl:output name="getActiveLongActionsResponse" message="tns:getActiveLongActionsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="ServiceException" message="tns:ServiceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSerializerClassNames">
      <wsdl:input name="getAllSerializerClassNames" message="tns:getAllSerializerClassNames">
    </wsdl:input>
      <wsdl:output name="getAllSerializerClassNamesResponse" message="tns:getAllSerializerClassNamesResponse">
    </wsdl:output>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRevision">
      <wsdl:input name="getRevision" message="tns:getRevision">
    </wsdl:input>
      <wsdl:output name="getRevisionResponse" message="tns:getRevisionResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkout">
      <wsdl:input name="checkout" message="tns:checkout">
    </wsdl:input>
      <wsdl:output name="checkoutResponse" message="tns:checkoutResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingSendConfirmationEmailAfterRegistration">
      <wsdl:input name="setSettingSendConfirmationEmailAfterRegistration" message="tns:setSettingSendConfirmationEmailAfterRegistration">
    </wsdl:input>
      <wsdl:output name="setSettingSendConfirmationEmailAfterRegistrationResponse" message="tns:setSettingSendConfirmationEmailAfterRegistrationResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResultTypeByName">
      <wsdl:input name="getResultTypeByName" message="tns:getResultTypeByName">
    </wsdl:input>
      <wsdl:output name="getResultTypeByNameResponse" message="tns:getResultTypeByNameResponse">
    </wsdl:output>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingFooterAddition">
      <wsdl:input name="getSettingFooterAddition" message="tns:getSettingFooterAddition">
    </wsdl:input>
      <wsdl:output name="getSettingFooterAdditionResponse" message="tns:getSettingFooterAdditionResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableClasses">
      <wsdl:input name="getAvailableClasses" message="tns:getAvailableClasses">
    </wsdl:input>
      <wsdl:output name="getAvailableClassesResponse" message="tns:getAvailableClassesResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRevisionsByUser">
      <wsdl:input name="getAllRevisionsByUser" message="tns:getAllRevisionsByUser">
    </wsdl:input>
      <wsdl:output name="getAllRevisionsByUserResponse" message="tns:getAllRevisionsByUserResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllResultTypes">
      <wsdl:input name="getAllResultTypes" message="tns:getAllResultTypes">
    </wsdl:input>
      <wsdl:output name="getAllResultTypesResponse" message="tns:getAllResultTypesResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="downloadByGuids">
      <wsdl:input name="downloadByGuids" message="tns:downloadByGuids">
    </wsdl:input>
      <wsdl:output name="downloadByGuidsResponse" message="tns:downloadByGuidsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="userHasRights">
      <wsdl:input name="userHasRights" message="tns:userHasRights">
    </wsdl:input>
      <wsdl:output name="userHasRightsResponse" message="tns:userHasRightsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addIgnoreFile">
      <wsdl:input name="addIgnoreFile" message="tns:addIgnoreFile">
    </wsdl:input>
      <wsdl:output name="addIgnoreFileResponse" message="tns:addIgnoreFileResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setExportTypeEnabled">
      <wsdl:input name="setExportTypeEnabled" message="tns:setExportTypeEnabled">
    </wsdl:input>
      <wsdl:output name="setExportTypeEnabledResponse" message="tns:setExportTypeEnabledResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAnonymousUser">
      <wsdl:input name="getAnonymousUser" message="tns:getAnonymousUser">
    </wsdl:input>
      <wsdl:output name="getAnonymousUserResponse" message="tns:getAnonymousUserResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <wsdl:input name="deleteUser" message="tns:deleteUser">
    </wsdl:input>
      <wsdl:output name="deleteUserResponse" message="tns:deleteUserResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserByUoid">
      <wsdl:input name="getUserByUoid" message="tns:getUserByUoid">
    </wsdl:input>
      <wsdl:output name="getUserByUoidResponse" message="tns:getUserByUoidResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSerializer">
      <wsdl:input name="addSerializer" message="tns:addSerializer">
    </wsdl:input>
      <wsdl:output name="addSerializerResponse" message="tns:addSerializerResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRevisionSummary">
      <wsdl:input name="getRevisionSummary" message="tns:getRevisionSummary">
    </wsdl:input>
      <wsdl:output name="getRevisionSummaryResponse" message="tns:getRevisionSummaryResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProjectByPoid">
      <wsdl:input name="getProjectByPoid" message="tns:getProjectByPoid">
    </wsdl:input>
      <wsdl:output name="getProjectByPoidResponse" message="tns:getProjectByPoidResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingSmtpServer">
      <wsdl:input name="getSettingSmtpServer" message="tns:getSettingSmtpServer">
    </wsdl:input>
      <wsdl:output name="getSettingSmtpServerResponse" message="tns:getSettingSmtpServerResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCurrentToken">
      <wsdl:input name="getCurrentToken" message="tns:getCurrentToken">
    </wsdl:input>
      <wsdl:output name="getCurrentTokenResponse" message="tns:getCurrentTokenResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEnabledResultTypes">
      <wsdl:input name="getEnabledResultTypes" message="tns:getEnabledResultTypes">
    </wsdl:input>
      <wsdl:output name="getEnabledResultTypesResponse" message="tns:getEnabledResultTypesResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateIgnoreFile">
      <wsdl:input name="updateIgnoreFile" message="tns:updateIgnoreFile">
    </wsdl:input>
      <wsdl:output name="updateIgnoreFileResponse" message="tns:updateIgnoreFileResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllNonAuthorizedProjectsOfUser">
      <wsdl:input name="getAllNonAuthorizedProjectsOfUser" message="tns:getAllNonAuthorizedProjectsOfUser">
    </wsdl:input>
      <wsdl:output name="getAllNonAuthorizedProjectsOfUserResponse" message="tns:getAllNonAuthorizedProjectsOfUserResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingShowVersionUpgradeAvailable">
      <wsdl:input name="setSettingShowVersionUpgradeAvailable" message="tns:setSettingShowVersionUpgradeAvailable">
    </wsdl:input>
      <wsdl:output name="setSettingShowVersionUpgradeAvailableResponse" message="tns:setSettingShowVersionUpgradeAvailableResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="requestPasswordChange">
      <wsdl:input name="requestPasswordChange" message="tns:requestPasswordChange">
    </wsdl:input>
      <wsdl:output name="requestPasswordChangeResponse" message="tns:requestPasswordChangeResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingIntelligentMerging">
      <wsdl:input name="isSettingIntelligentMerging" message="tns:isSettingIntelligentMerging">
    </wsdl:input>
      <wsdl:output name="isSettingIntelligentMergingResponse" message="tns:isSettingIntelligentMergingResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingHeaderAddition">
      <wsdl:input name="getSettingHeaderAddition" message="tns:getSettingHeaderAddition">
    </wsdl:input>
      <wsdl:output name="getSettingHeaderAdditionResponse" message="tns:getSettingHeaderAdditionResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkinSync">
      <wsdl:input name="checkinSync" message="tns:checkinSync">
    </wsdl:input>
      <wsdl:output name="checkinSyncResponse" message="tns:checkinSyncResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkoutLastRevision">
      <wsdl:input name="checkoutLastRevision" message="tns:checkoutLastRevision">
    </wsdl:input>
      <wsdl:output name="checkoutLastRevisionResponse" message="tns:checkoutLastRevisionResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="branchToNewProject">
      <wsdl:input name="branchToNewProject" message="tns:branchToNewProject">
    </wsdl:input>
      <wsdl:output name="branchToNewProjectResponse" message="tns:branchToNewProjectResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLastDatabaseReset">
      <wsdl:input name="getLastDatabaseReset" message="tns:getLastDatabaseReset">
    </wsdl:input>
      <wsdl:output name="getLastDatabaseResetResponse" message="tns:getLastDatabaseResetResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataObjectByGuid">
      <wsdl:input name="getDataObjectByGuid" message="tns:getDataObjectByGuid">
    </wsdl:input>
      <wsdl:output name="getDataObjectByGuidResponse" message="tns:getDataObjectByGuidResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="downloadOfType">
      <wsdl:input name="downloadOfType" message="tns:downloadOfType">
    </wsdl:input>
      <wsdl:output name="downloadOfTypeResponse" message="tns:downloadOfTypeResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateClashDetectionSettings">
      <wsdl:input name="updateClashDetectionSettings" message="tns:updateClashDetectionSettings">
    </wsdl:input>
      <wsdl:output name="updateClashDetectionSettingsResponse" message="tns:updateClashDetectionSettingsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserToProject">
      <wsdl:input name="addUserToProject" message="tns:addUserToProject">
    </wsdl:input>
      <wsdl:output name="addUserToProjectResponse" message="tns:addUserToProjectResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveUserSessions">
      <wsdl:input name="getActiveUserSessions" message="tns:getActiveUserSessions">
    </wsdl:input>
      <wsdl:output name="getActiveUserSessionsResponse" message="tns:getActiveUserSessionsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="ServiceException" message="tns:ServiceException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingIntelligentMerging">
      <wsdl:input name="setSettingIntelligentMerging" message="tns:setSettingIntelligentMerging">
    </wsdl:input>
      <wsdl:output name="setSettingIntelligentMergingResponse" message="tns:setSettingIntelligentMergingResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoggedInUser">
      <wsdl:input name="getLoggedInUser" message="tns:getLoggedInUser">
    </wsdl:input>
      <wsdl:output name="getLoggedInUserResponse" message="tns:getLoggedInUserResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingAutoTestClashes">
      <wsdl:input name="setSettingAutoTestClashes" message="tns:setSettingAutoTestClashes">
    </wsdl:input>
      <wsdl:output name="setSettingAutoTestClashesResponse" message="tns:setSettingAutoTestClashesResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGeoTag">
      <wsdl:input name="getGeoTag" message="tns:getGeoTag">
    </wsdl:input>
      <wsdl:output name="getGeoTagResponse" message="tns:getGeoTagResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="branchToExistingProject">
      <wsdl:input name="branchToExistingProject" message="tns:branchToExistingProject">
    </wsdl:input>
      <wsdl:output name="branchToExistingProjectResponse" message="tns:branchToExistingProjectResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccessMethod">
      <wsdl:input name="getAccessMethod" message="tns:getAccessMethod">
    </wsdl:input>
      <wsdl:output name="getAccessMethodResponse" message="tns:getAccessMethodResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingRegistrationAddition">
      <wsdl:input name="getSettingRegistrationAddition" message="tns:getSettingRegistrationAddition">
    </wsdl:input>
      <wsdl:output name="getSettingRegistrationAdditionResponse" message="tns:getSettingRegistrationAdditionResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingAllowSelfRegistration">
      <wsdl:input name="isSettingAllowSelfRegistration" message="tns:isSettingAllowSelfRegistration">
    </wsdl:input>
      <wsdl:output name="isSettingAllowSelfRegistrationResponse" message="tns:isSettingAllowSelfRegistrationResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingSiteAddress">
      <wsdl:input name="setSettingSiteAddress" message="tns:setSettingSiteAddress">
    </wsdl:input>
      <wsdl:output name="setSettingSiteAddressResponse" message="tns:setSettingSiteAddressResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllIgnoreFiles">
      <wsdl:input name="getAllIgnoreFiles" message="tns:getAllIgnoreFiles">
    </wsdl:input>
      <wsdl:output name="getAllIgnoreFilesResponse" message="tns:getAllIgnoreFilesResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCheckoutsOfProjectAndSubProjects">
      <wsdl:input name="getAllCheckoutsOfProjectAndSubProjects" message="tns:getAllCheckoutsOfProjectAndSubProjects">
    </wsdl:input>
      <wsdl:output name="getAllCheckoutsOfProjectAndSubProjectsResponse" message="tns:getAllCheckoutsOfProjectAndSubProjectsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="migrateDatabase">
      <wsdl:input name="migrateDatabase" message="tns:migrateDatabase">
    </wsdl:input>
      <wsdl:output name="migrateDatabaseResponse" message="tns:migrateDatabaseResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingAllowUsersToCreateTopLevelProjects">
      <wsdl:input name="isSettingAllowUsersToCreateTopLevelProjects" message="tns:isSettingAllowUsersToCreateTopLevelProjects">
    </wsdl:input>
      <wsdl:output name="isSettingAllowUsersToCreateTopLevelProjectsResponse" message="tns:isSettingAllowUsersToCreateTopLevelProjectsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <wsdl:input name="changePassword" message="tns:changePassword">
    </wsdl:input>
      <wsdl:output name="changePasswordResponse" message="tns:changePasswordResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeUserType">
      <wsdl:input name="changeUserType" message="tns:changeUserType">
    </wsdl:input>
      <wsdl:output name="changeUserTypeResponse" message="tns:changeUserTypeResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="logout">
      <wsdl:input name="logout" message="tns:logout">
    </wsdl:input>
      <wsdl:output name="logoutResponse" message="tns:logoutResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingEmailSenderAddress">
      <wsdl:input name="getSettingEmailSenderAddress" message="tns:getSettingEmailSenderAddress">
    </wsdl:input>
      <wsdl:output name="getSettingEmailSenderAddressResponse" message="tns:getSettingEmailSenderAddressResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLastActive">
      <wsdl:input name="getLastActive" message="tns:getLastActive">
    </wsdl:input>
      <wsdl:output name="getLastActiveResponse" message="tns:getLastActiveResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendClashesEmail">
      <wsdl:input name="sendClashesEmail" message="tns:sendClashesEmail">
    </wsdl:input>
      <wsdl:output name="sendClashesEmailResponse" message="tns:sendClashesEmailResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLogs">
      <wsdl:input name="getLogs" message="tns:getLogs">
    </wsdl:input>
      <wsdl:output name="getLogsResponse" message="tns:getLogsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingEnabledExportTypes">
      <wsdl:input name="getSettingEnabledExportTypes" message="tns:getSettingEnabledExportTypes">
    </wsdl:input>
      <wsdl:output name="getSettingEnabledExportTypesResponse" message="tns:getSettingEnabledExportTypesResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveSince">
      <wsdl:input name="getActiveSince" message="tns:getActiveSince">
    </wsdl:input>
      <wsdl:output name="getActiveSinceResponse" message="tns:getActiveSinceResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteSerializer">
      <wsdl:input name="deleteSerializer" message="tns:deleteSerializer">
    </wsdl:input>
      <wsdl:output name="deleteSerializerResponse" message="tns:deleteSerializerResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSerializers">
      <wsdl:input name="getAllSerializers" message="tns:getAllSerializers">
    </wsdl:input>
      <wsdl:output name="getAllSerializersResponse" message="tns:getAllSerializersResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addProjectAsSubProject">
      <wsdl:input name="addProjectAsSubProject" message="tns:addProjectAsSubProject">
    </wsdl:input>
      <wsdl:output name="addProjectAsSubProjectResponse" message="tns:addProjectAsSubProjectResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="downloadByOids">
      <wsdl:input name="downloadByOids" message="tns:downloadByOids">
    </wsdl:input>
      <wsdl:output name="downloadByOidsResponse" message="tns:downloadByOidsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteIgnoreFile">
      <wsdl:input name="deleteIgnoreFile" message="tns:deleteIgnoreFile">
    </wsdl:input>
      <wsdl:output name="deleteIgnoreFileResponse" message="tns:deleteIgnoreFileResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="autologin">
      <wsdl:input name="autologin" message="tns:autologin">
    </wsdl:input>
      <wsdl:output name="autologinResponse" message="tns:autologinResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCheckoutsByUser">
      <wsdl:input name="getAllCheckoutsByUser" message="tns:getAllCheckoutsByUser">
    </wsdl:input>
      <wsdl:output name="getAllCheckoutsByUserResponse" message="tns:getAllCheckoutsByUserResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingSendConfirmationEmailAfterRegistration">
      <wsdl:input name="isSettingSendConfirmationEmailAfterRegistration" message="tns:isSettingSendConfirmationEmailAfterRegistration">
    </wsdl:input>
      <wsdl:output name="isSettingSendConfirmationEmailAfterRegistrationResponse" message="tns:isSettingSendConfirmationEmailAfterRegistrationResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingCheckinMergingEnabled">
      <wsdl:input name="setSettingCheckinMergingEnabled" message="tns:setSettingCheckinMergingEnabled">
    </wsdl:input>
      <wsdl:output name="setSettingCheckinMergingEnabledResponse" message="tns:setSettingCheckinMergingEnabledResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCheckoutsOfRevision">
      <wsdl:input name="getAllCheckoutsOfRevision" message="tns:getAllCheckoutsOfRevision">
    </wsdl:input>
      <wsdl:output name="getAllCheckoutsOfRevisionResponse" message="tns:getAllCheckoutsOfRevisionResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRevision">
      <wsdl:input name="updateRevision" message="tns:updateRevision">
    </wsdl:input>
      <wsdl:output name="updateRevisionResponse" message="tns:updateRevisionResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findClashesByGuid">
      <wsdl:input name="findClashesByGuid" message="tns:findClashesByGuid">
    </wsdl:input>
      <wsdl:output name="findClashesByGuidResponse" message="tns:findClashesByGuidResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingShowVersionUpgradeAvailable">
      <wsdl:input name="isSettingShowVersionUpgradeAvailable" message="tns:isSettingShowVersionUpgradeAvailable">
    </wsdl:input>
      <wsdl:output name="isSettingShowVersionUpgradeAvailableResponse" message="tns:isSettingShowVersionUpgradeAvailableResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingAllowSelfRegistration">
      <wsdl:input name="setSettingAllowSelfRegistration" message="tns:setSettingAllowSelfRegistration">
    </wsdl:input>
      <wsdl:output name="setSettingAllowSelfRegistrationResponse" message="tns:setSettingAllowSelfRegistrationResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingCheckinMergingEnabled">
      <wsdl:input name="isSettingCheckinMergingEnabled" message="tns:isSettingCheckinMergingEnabled">
    </wsdl:input>
      <wsdl:output name="isSettingCheckinMergingEnabledResponse" message="tns:isSettingCheckinMergingEnabledResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDatabaseInformation">
      <wsdl:input name="getDatabaseInformation" message="tns:getDatabaseInformation">
    </wsdl:input>
      <wsdl:output name="getDatabaseInformationResponse" message="tns:getDatabaseInformationResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="downloadProjects">
      <wsdl:input name="downloadProjects" message="tns:downloadProjects">
    </wsdl:input>
      <wsdl:output name="downloadProjectsResponse" message="tns:downloadProjectsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClashDetectionSettings">
      <wsdl:input name="getClashDetectionSettings" message="tns:getClashDetectionSettings">
    </wsdl:input>
      <wsdl:output name="getClashDetectionSettingsResponse" message="tns:getClashDetectionSettingsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProject">
      <wsdl:input name="updateProject" message="tns:updateProject">
    </wsdl:input>
      <wsdl:output name="updateProjectResponse" message="tns:updateProjectResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingCacheOutputFiles">
      <wsdl:input name="setSettingCacheOutputFiles" message="tns:setSettingCacheOutputFiles">
    </wsdl:input>
      <wsdl:output name="setSettingCacheOutputFilesResponse" message="tns:setSettingCacheOutputFilesResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingCustomLogoAddress">
      <wsdl:input name="getSettingCustomLogoAddress" message="tns:getSettingCustomLogoAddress">
    </wsdl:input>
      <wsdl:output name="getSettingCustomLogoAddressResponse" message="tns:getSettingCustomLogoAddressResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="download">
      <wsdl:input name="download" message="tns:download">
    </wsdl:input>
      <wsdl:output name="downloadResponse" message="tns:downloadResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSubProjects">
      <wsdl:input name="getSubProjects" message="tns:getSubProjects">
    </wsdl:input>
      <wsdl:output name="getSubProjectsResponse" message="tns:getSubProjectsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingAutoTestClashes">
      <wsdl:input name="isSettingAutoTestClashes" message="tns:isSettingAutoTestClashes">
    </wsdl:input>
      <wsdl:output name="isSettingAutoTestClashesResponse" message="tns:isSettingAutoTestClashesResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCheckoutsOfProject">
      <wsdl:input name="getAllCheckoutsOfProject" message="tns:getAllCheckoutsOfProject">
    </wsdl:input>
      <wsdl:output name="getAllCheckoutsOfProjectResponse" message="tns:getAllCheckoutsOfProjectResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingMergeIdentifier">
      <wsdl:input name="setSettingMergeIdentifier" message="tns:setSettingMergeIdentifier">
    </wsdl:input>
      <wsdl:output name="setSettingMergeIdentifierResponse" message="tns:setSettingMergeIdentifierResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIgnoreFileById">
      <wsdl:input name="getIgnoreFileById" message="tns:getIgnoreFileById">
    </wsdl:input>
      <wsdl:output name="getIgnoreFileByIdResponse" message="tns:getIgnoreFileByIdResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllReadableProjects">
      <wsdl:input name="getAllReadableProjects" message="tns:getAllReadableProjects">
    </wsdl:input>
      <wsdl:output name="getAllReadableProjectsResponse" message="tns:getAllReadableProjectsResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteProject">
      <wsdl:input name="deleteProject" message="tns:deleteProject">
    </wsdl:input>
      <wsdl:output name="deleteProjectResponse" message="tns:deleteProjectResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingCacheOutputFiles">
      <wsdl:input name="isSettingCacheOutputFiles" message="tns:isSettingCacheOutputFiles">
    </wsdl:input>
      <wsdl:output name="isSettingCacheOutputFilesResponse" message="tns:isSettingCacheOutputFilesResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllNonAuthorizedUsersOfProject">
      <wsdl:input name="getAllNonAuthorizedUsersOfProject" message="tns:getAllNonAuthorizedUsersOfProject">
    </wsdl:input>
      <wsdl:output name="getAllNonAuthorizedUsersOfProjectResponse" message="tns:getAllNonAuthorizedUsersOfProjectResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataObjectByOid">
      <wsdl:input name="getDataObjectByOid" message="tns:getDataObjectByOid">
    </wsdl:input>
      <wsdl:output name="getDataObjectByOidResponse" message="tns:getDataObjectByOidResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllAuthorizedUsersOfProject">
      <wsdl:input name="getAllAuthorizedUsersOfProject" message="tns:getAllAuthorizedUsersOfProject">
    </wsdl:input>
      <wsdl:output name="getAllAuthorizedUsersOfProjectResponse" message="tns:getAllAuthorizedUsersOfProjectResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findClashesByEid">
      <wsdl:input name="findClashesByEid" message="tns:findClashesByEid">
    </wsdl:input>
      <wsdl:output name="findClashesByEidResponse" message="tns:findClashesByEidResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="compare">
      <wsdl:input name="compare" message="tns:compare">
    </wsdl:input>
      <wsdl:output name="compareResponse" message="tns:compareResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLastClashes">
      <wsdl:input name="getLastClashes" message="tns:getLastClashes">
    </wsdl:input>
      <wsdl:output name="getLastClashesResponse" message="tns:getLastClashesResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUsers">
      <wsdl:input name="getAllUsers" message="tns:getAllUsers">
    </wsdl:input>
      <wsdl:output name="getAllUsersResponse" message="tns:getAllUsersResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCurrentUser">
      <wsdl:input name="getCurrentUser" message="tns:getCurrentUser">
    </wsdl:input>
      <wsdl:output name="getCurrentUserResponse" message="tns:getCurrentUserResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="undeleteProject">
      <wsdl:input name="undeleteProject" message="tns:undeleteProject">
    </wsdl:input>
      <wsdl:output name="undeleteProjectResponse" message="tns:undeleteProjectResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataObjectsByType">
      <wsdl:input name="getDataObjectsByType" message="tns:getDataObjectsByType">
    </wsdl:input>
      <wsdl:output name="getDataObjectsByTypeResponse" message="tns:getDataObjectsByTypeResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="login">
      <wsdl:input name="login" message="tns:login">
    </wsdl:input>
      <wsdl:output name="loginResponse" message="tns:loginResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ping">
      <wsdl:input name="ping" message="tns:ping">
    </wsdl:input>
      <wsdl:output name="pingResponse" message="tns:pingResponse">
    </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendCompareEmail">
      <wsdl:input name="sendCompareEmail" message="tns:sendCompareEmail">
    </wsdl:input>
      <wsdl:output name="sendCompareEmailResponse" message="tns:sendCompareEmailResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateAccount">
      <wsdl:input name="validateAccount" message="tns:validateAccount">
    </wsdl:input>
      <wsdl:output name="validateAccountResponse" message="tns:validateAccountResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingHeaderAddition">
      <wsdl:input name="setSettingHeaderAddition" message="tns:setSettingHeaderAddition">
    </wsdl:input>
      <wsdl:output name="setSettingHeaderAdditionResponse" message="tns:setSettingHeaderAdditionResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingSiteAddress">
      <wsdl:input name="getSettingSiteAddress" message="tns:getSettingSiteAddress">
    </wsdl:input>
      <wsdl:output name="getSettingSiteAddressResponse" message="tns:getSettingSiteAddressResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeUserFromProject">
      <wsdl:input name="removeUserFromProject" message="tns:removeUserFromProject">
    </wsdl:input>
      <wsdl:output name="removeUserFromProjectResponse" message="tns:removeUserFromProjectResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSerializerById">
      <wsdl:input name="getSerializerById" message="tns:getSerializerById">
    </wsdl:input>
      <wsdl:output name="getSerializerByIdResponse" message="tns:getSerializerByIdResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProjectByName">
      <wsdl:input name="getProjectByName" message="tns:getProjectByName">
    </wsdl:input>
      <wsdl:output name="getProjectByNameResponse" message="tns:getProjectByNameResponse">
    </wsdl:output>
      <wsdl:fault name="ServerException" message="tns:ServerException">
    </wsdl:fault>
      <wsdl:fault name="UserException" message="tns:UserException">
    </wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="ServiceInterfaceServiceSoapBinding" type="tns:soap">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getUsersProjects">
      <soap:operation soapAction="getUsersProjects" style="document"/>
      <wsdl:input name="getUsersProjects">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUsersProjectsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getMigrations">
      <soap:operation soapAction="getPendingMigrations" style="document"/>
      <wsdl:input name="getMigrations">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getMigrationsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="userHasCheckinRights">
      <soap:operation soapAction="userHasCheckinRights" style="document"/>
      <wsdl:input name="userHasCheckinRights">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="userHasCheckinRightsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isResultTypeEnabled">
      <soap:operation soapAction="isResultTypeEnabled" style="document"/>
      <wsdl:input name="isResultTypeEnabled">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isResultTypeEnabledResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCheckoutWarnings">
      <soap:operation soapAction="getShowCheckoutWarning" style="document"/>
      <wsdl:input name="getCheckoutWarnings">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCheckoutWarningsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDownloadData">
      <soap:operation soapAction="getDownloadData" style="document"/>
      <wsdl:input name="getDownloadData">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDownloadDataResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingEmailSenderAddress">
      <soap:operation soapAction="setSettingsEmailSenderAddress" style="document"/>
      <wsdl:input name="setSettingEmailSenderAddress">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingEmailSenderAddressResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingEnabledExportTypes">
      <soap:operation soapAction="setSettingsEnabledExportTypes" style="document"/>
      <wsdl:input name="setSettingEnabledExportTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingEnabledExportTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingFooterAddition">
      <soap:operation soapAction="setSettingFooterAddition" style="document"/>
      <wsdl:input name="setSettingFooterAddition">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingFooterAdditionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="undeleteUser">
      <soap:operation soapAction="undeleteUser" style="document"/>
      <wsdl:input name="undeleteUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="undeleteUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkinAsync">
      <soap:operation soapAction="checkinAsync" style="document"/>
      <wsdl:input name="checkinAsync">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkinAsyncResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRevisionsOfProject">
      <soap:operation soapAction="getAllRevisionsOfProject" style="document"/>
      <wsdl:input name="getAllRevisionsOfProject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllRevisionsOfProjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllProjects">
      <soap:operation soapAction="getAllProjects" style="document"/>
      <wsdl:input name="getAllProjects">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllProjectsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setup">
      <soap:operation soapAction="setup" style="document"/>
      <wsdl:input name="setup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="loginAnonymous">
      <soap:operation soapAction="loginAnonymous" style="document"/>
      <wsdl:input name="loginAnonymous">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="loginAnonymousResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isLoggedIn">
      <soap:operation soapAction="isLoggedIn" style="document"/>
      <wsdl:input name="isLoggedIn">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isLoggedInResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setRevisionTag">
      <soap:operation soapAction="setRevisionTag" style="document"/>
      <wsdl:input name="setRevisionTag">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setRevisionTagResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserByUserName">
      <soap:operation soapAction="getUserByUserName" style="document"/>
      <wsdl:input name="getUserByUserName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserByUserNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingCustomLogoAddress">
      <soap:operation soapAction="setSettingsCustomLogoAddress" style="document"/>
      <wsdl:input name="setSettingCustomLogoAddress">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingCustomLogoAddressResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUser">
      <soap:operation soapAction="addUser" style="document"/>
      <wsdl:input name="addUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingAllowUsersToCreateTopLevelProjects">
      <soap:operation soapAction="setSettingAllowUsersToCreateTopLevelProjects" style="document"/>
      <wsdl:input name="setSettingAllowUsersToCreateTopLevelProjects">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingAllowUsersToCreateTopLevelProjectsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addProject">
      <soap:operation soapAction="addProject" style="document"/>
      <wsdl:input name="addProject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addProjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDownloadState">
      <soap:operation soapAction="getDownloadState" style="document"/>
      <wsdl:input name="getDownloadState">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDownloadStateResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateGeoTag">
      <soap:operation soapAction="updateGeoTag" style="document"/>
      <wsdl:input name="updateGeoTag">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateGeoTagResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateSerializer">
      <soap:operation soapAction="updateSerializer" style="document"/>
      <wsdl:input name="updateSerializer">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateSerializerResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingRegistrationAddition">
      <soap:operation soapAction="setSettingsRegistrationAddition" style="document"/>
      <wsdl:input name="setSettingRegistrationAddition">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingRegistrationAdditionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingSmtpServer">
      <soap:operation soapAction="setSettingsSmtpServer" style="document"/>
      <wsdl:input name="setSettingSmtpServer">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingSmtpServerResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingMergeIdentifier">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getSettingMergeIdentifier">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSettingMergeIdentifierResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveLongActions">
      <soap:operation soapAction="getActiveLongActions" style="document"/>
      <wsdl:input name="getActiveLongActions">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActiveLongActionsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceException">
        <soap:fault name="ServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSerializerClassNames">
      <soap:operation soapAction="getAllSerializerClassNames" style="document"/>
      <wsdl:input name="getAllSerializerClassNames">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllSerializerClassNamesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkout">
      <soap:operation soapAction="checkout" style="document"/>
      <wsdl:input name="checkout">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkoutResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRevision">
      <soap:operation soapAction="getRevision" style="document"/>
      <wsdl:input name="getRevision">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRevisionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingSendConfirmationEmailAfterRegistration">
      <soap:operation soapAction="setSettingSendConfirmationEmailAfterRegistration" style="document"/>
      <wsdl:input name="setSettingSendConfirmationEmailAfterRegistration">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingSendConfirmationEmailAfterRegistrationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getResultTypeByName">
      <soap:operation soapAction="getResultTypeByName" style="document"/>
      <wsdl:input name="getResultTypeByName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getResultTypeByNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllResultTypes">
      <soap:operation soapAction="getAllResultTypes" style="document"/>
      <wsdl:input name="getAllResultTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllResultTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllRevisionsByUser">
      <soap:operation soapAction="getAllRevisionsByUser" style="document"/>
      <wsdl:input name="getAllRevisionsByUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllRevisionsByUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAvailableClasses">
      <soap:operation soapAction="getAvailableClasses" style="document"/>
      <wsdl:input name="getAvailableClasses">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAvailableClassesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingFooterAddition">
      <soap:operation soapAction="getSettingFooterAddition" style="document"/>
      <wsdl:input name="getSettingFooterAddition">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSettingFooterAdditionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="downloadByGuids">
      <soap:operation soapAction="downloadByGuids" style="document"/>
      <wsdl:input name="downloadByGuids">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="downloadByGuidsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="userHasRights">
      <soap:operation soapAction="userHasRights" style="document"/>
      <wsdl:input name="userHasRights">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="userHasRightsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addIgnoreFile">
      <soap:operation soapAction="addIgnoreFile" style="document"/>
      <wsdl:input name="addIgnoreFile">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addIgnoreFileResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteUser">
      <soap:operation soapAction="deleteUser" style="document"/>
      <wsdl:input name="deleteUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAnonymousUser">
      <soap:operation soapAction="getAnonymousUser" style="document"/>
      <wsdl:input name="getAnonymousUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAnonymousUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setExportTypeEnabled">
      <soap:operation soapAction="setExportTypeEnabled" style="document"/>
      <wsdl:input name="setExportTypeEnabled">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setExportTypeEnabledResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addSerializer">
      <soap:operation soapAction="addSerializer" style="document"/>
      <wsdl:input name="addSerializer">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addSerializerResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserByUoid">
      <soap:operation soapAction="getUserByUoid" style="document"/>
      <wsdl:input name="getUserByUoid">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserByUoidResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getRevisionSummary">
      <soap:operation soapAction="getRevisionSummary" style="document"/>
      <wsdl:input name="getRevisionSummary">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getRevisionSummaryResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProjectByPoid">
      <soap:operation soapAction="getProjectByPoid" style="document"/>
      <wsdl:input name="getProjectByPoid">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProjectByPoidResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEnabledResultTypes">
      <soap:operation soapAction="getEnabledResultTypes" style="document"/>
      <wsdl:input name="getEnabledResultTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEnabledResultTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingSmtpServer">
      <soap:operation soapAction="getSettingsSmtpServer" style="document"/>
      <wsdl:input name="getSettingSmtpServer">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSettingSmtpServerResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCurrentToken">
      <soap:operation soapAction="getCurrentToken" style="document"/>
      <wsdl:input name="getCurrentToken">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCurrentTokenResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateIgnoreFile">
      <soap:operation soapAction="updateIgnoreFile" style="document"/>
      <wsdl:input name="updateIgnoreFile">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateIgnoreFileResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllNonAuthorizedProjectsOfUser">
      <soap:operation soapAction="getAllNonAuthorizedProjectsOfUser" style="document"/>
      <wsdl:input name="getAllNonAuthorizedProjectsOfUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllNonAuthorizedProjectsOfUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingShowVersionUpgradeAvailable">
      <soap:operation soapAction="setSettingShowVersionUpgradeAvailable" style="document"/>
      <wsdl:input name="setSettingShowVersionUpgradeAvailable">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingShowVersionUpgradeAvailableResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="requestPasswordChange">
      <soap:operation soapAction="requestPasswordChange" style="document"/>
      <wsdl:input name="requestPasswordChange">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="requestPasswordChangeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingIntelligentMerging">
      <soap:operation soapAction="isSettingIntelligentMerging" style="document"/>
      <wsdl:input name="isSettingIntelligentMerging">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isSettingIntelligentMergingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkinSync">
      <soap:operation soapAction="checkinSync" style="document"/>
      <wsdl:input name="checkinSync">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkinSyncResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingHeaderAddition">
      <soap:operation soapAction="getSettingHeaderAddition" style="document"/>
      <wsdl:input name="getSettingHeaderAddition">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSettingHeaderAdditionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="branchToNewProject">
      <soap:operation soapAction="branchToNewProject" style="document"/>
      <wsdl:input name="branchToNewProject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="branchToNewProjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkoutLastRevision">
      <soap:operation soapAction="checkoutLastRevision" style="document"/>
      <wsdl:input name="checkoutLastRevision">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkoutLastRevisionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLastDatabaseReset">
      <soap:operation soapAction="getLastDatabaseReset" style="document"/>
      <wsdl:input name="getLastDatabaseReset">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLastDatabaseResetResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataObjectByGuid">
      <soap:operation soapAction="getDataObjectByGuid" style="document"/>
      <wsdl:input name="getDataObjectByGuid">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDataObjectByGuidResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="downloadOfType">
      <soap:operation soapAction="downloadOfType" style="document"/>
      <wsdl:input name="downloadOfType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="downloadOfTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateClashDetectionSettings">
      <soap:operation soapAction="updateClashDetectionSettings" style="document"/>
      <wsdl:input name="updateClashDetectionSettings">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateClashDetectionSettingsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserToProject">
      <soap:operation soapAction="addUserToProject" style="document"/>
      <wsdl:input name="addUserToProject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addUserToProjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveUserSessions">
      <soap:operation soapAction="getActiveUserSessions" style="document"/>
      <wsdl:input name="getActiveUserSessions">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActiveUserSessionsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="ServiceException">
        <soap:fault name="ServiceException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingIntelligentMerging">
      <soap:operation soapAction="setSettingIntelligentMerging" style="document"/>
      <wsdl:input name="setSettingIntelligentMerging">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingIntelligentMergingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLoggedInUser">
      <soap:operation soapAction="getLoggedInUser" style="document"/>
      <wsdl:input name="getLoggedInUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLoggedInUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingAutoTestClashes">
      <soap:operation soapAction="setSettingAutoTestClashes" style="document"/>
      <wsdl:input name="setSettingAutoTestClashes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingAutoTestClashesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getGeoTag">
      <soap:operation soapAction="getGeoTag" style="document"/>
      <wsdl:input name="getGeoTag">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getGeoTagResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="branchToExistingProject">
      <soap:operation soapAction="branchToExistingProject" style="document"/>
      <wsdl:input name="branchToExistingProject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="branchToExistingProjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAccessMethod">
      <soap:operation soapAction="getAccessMethod" style="document"/>
      <wsdl:input name="getAccessMethod">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAccessMethodResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingRegistrationAddition">
      <soap:operation soapAction="getSettingsRegistrationAddition" style="document"/>
      <wsdl:input name="getSettingRegistrationAddition">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSettingRegistrationAdditionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingAllowSelfRegistration">
      <soap:operation soapAction="isSettingAllowSelfRegistration" style="document"/>
      <wsdl:input name="isSettingAllowSelfRegistration">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isSettingAllowSelfRegistrationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCheckoutsOfProjectAndSubProjects">
      <soap:operation soapAction="getAllCheckoutsOfProjectAndSubProjects" style="document"/>
      <wsdl:input name="getAllCheckoutsOfProjectAndSubProjects">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllCheckoutsOfProjectAndSubProjectsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllIgnoreFiles">
      <soap:operation soapAction="getAllIgnoreFiles" style="document"/>
      <wsdl:input name="getAllIgnoreFiles">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllIgnoreFilesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingSiteAddress">
      <soap:operation soapAction="setSettingsSiteAddress" style="document"/>
      <wsdl:input name="setSettingSiteAddress">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingSiteAddressResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="migrateDatabase">
      <soap:operation soapAction="migrateDatabase" style="document"/>
      <wsdl:input name="migrateDatabase">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="migrateDatabaseResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingAllowUsersToCreateTopLevelProjects">
      <soap:operation soapAction="isSettingAllowUsersToCreateTopLevelProjects" style="document"/>
      <wsdl:input name="isSettingAllowUsersToCreateTopLevelProjects">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isSettingAllowUsersToCreateTopLevelProjectsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <soap:operation soapAction="changePassword" style="document"/>
      <wsdl:input name="changePassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="changePasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changeUserType">
      <soap:operation soapAction="changeUserType" style="document"/>
      <wsdl:input name="changeUserType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="changeUserTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="logout">
      <soap:operation soapAction="logout" style="document"/>
      <wsdl:input name="logout">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="logoutResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingEmailSenderAddress">
      <soap:operation soapAction="getSettingsEmailSenderAddress" style="document"/>
      <wsdl:input name="getSettingEmailSenderAddress">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSettingEmailSenderAddressResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLastActive">
      <soap:operation soapAction="getLastActive" style="document"/>
      <wsdl:input name="getLastActive">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLastActiveResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="sendClashesEmail">
      <soap:operation soapAction="sendClashesEmail" style="document"/>
      <wsdl:input name="sendClashesEmail">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendClashesEmailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLogs">
      <soap:operation soapAction="getLogs" style="document"/>
      <wsdl:input name="getLogs">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLogsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingEnabledExportTypes">
      <soap:operation soapAction="getSettingsEnabledExportTypes" style="document"/>
      <wsdl:input name="getSettingEnabledExportTypes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSettingEnabledExportTypesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteSerializer">
      <soap:operation soapAction="deleteSerializer" style="document"/>
      <wsdl:input name="deleteSerializer">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteSerializerResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getActiveSince">
      <soap:operation soapAction="getActiveSince" style="document"/>
      <wsdl:input name="getActiveSince">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getActiveSinceResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllSerializers">
      <soap:operation soapAction="getAllSerializers" style="document"/>
      <wsdl:input name="getAllSerializers">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllSerializersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addProjectAsSubProject">
      <soap:operation soapAction="addProjectAsSubProject" style="document"/>
      <wsdl:input name="addProjectAsSubProject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addProjectAsSubProjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="autologin">
      <soap:operation soapAction="autologin" style="document"/>
      <wsdl:input name="autologin">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="autologinResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteIgnoreFile">
      <soap:operation soapAction="deleteIgnoreFile" style="document"/>
      <wsdl:input name="deleteIgnoreFile">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteIgnoreFileResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="downloadByOids">
      <soap:operation soapAction="downloadByOids" style="document"/>
      <wsdl:input name="downloadByOids">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="downloadByOidsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCheckoutsByUser">
      <soap:operation soapAction="getAllCheckoutsByUser" style="document"/>
      <wsdl:input name="getAllCheckoutsByUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllCheckoutsByUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingSendConfirmationEmailAfterRegistration">
      <soap:operation soapAction="isSettingSendConfirmationEmailAfterRegistration" style="document"/>
      <wsdl:input name="isSettingSendConfirmationEmailAfterRegistration">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isSettingSendConfirmationEmailAfterRegistrationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingCheckinMergingEnabled">
      <soap:operation soapAction="setSettingCheckinMergingEnabled" style="document"/>
      <wsdl:input name="setSettingCheckinMergingEnabled">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingCheckinMergingEnabledResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCheckoutsOfRevision">
      <soap:operation soapAction="getAllCheckoutsOfRevision" style="document"/>
      <wsdl:input name="getAllCheckoutsOfRevision">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllCheckoutsOfRevisionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findClashesByGuid">
      <soap:operation soapAction="findClashesByGuid" style="document"/>
      <wsdl:input name="findClashesByGuid">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findClashesByGuidResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateRevision">
      <soap:operation soapAction="updateRevision" style="document"/>
      <wsdl:input name="updateRevision">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateRevisionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingShowVersionUpgradeAvailable">
      <soap:operation soapAction="isSettingShowVersionUpgradeAvailable" style="document"/>
      <wsdl:input name="isSettingShowVersionUpgradeAvailable">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isSettingShowVersionUpgradeAvailableResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingAllowSelfRegistration">
      <soap:operation soapAction="setSettingAllowSelfRegistration" style="document"/>
      <wsdl:input name="setSettingAllowSelfRegistration">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingAllowSelfRegistrationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingCheckinMergingEnabled">
      <soap:operation soapAction="isSettingCheckinMergingEnabled" style="document"/>
      <wsdl:input name="isSettingCheckinMergingEnabled">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isSettingCheckinMergingEnabledResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDatabaseInformation">
      <soap:operation soapAction="getDatabaseInformation" style="document"/>
      <wsdl:input name="getDatabaseInformation">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDatabaseInformationResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="downloadProjects">
      <soap:operation soapAction="downloadProjects" style="document"/>
      <wsdl:input name="downloadProjects">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="downloadProjectsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getClashDetectionSettings">
      <soap:operation soapAction="getClashDetectionSettings" style="document"/>
      <wsdl:input name="getClashDetectionSettings">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getClashDetectionSettingsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingCacheOutputFiles">
      <soap:operation soapAction="setCacheOutputFiles" style="document"/>
      <wsdl:input name="setSettingCacheOutputFiles">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingCacheOutputFilesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateProject">
      <soap:operation soapAction="updateProject" style="document"/>
      <wsdl:input name="updateProject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateProjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingCustomLogoAddress">
      <soap:operation soapAction="getSettingsCustomLogoAddress" style="document"/>
      <wsdl:input name="getSettingCustomLogoAddress">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSettingCustomLogoAddressResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="download">
      <soap:operation soapAction="download" style="document"/>
      <wsdl:input name="download">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="downloadResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingAutoTestClashes">
      <soap:operation soapAction="isSettingAutoTestClashes" style="document"/>
      <wsdl:input name="isSettingAutoTestClashes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isSettingAutoTestClashesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSubProjects">
      <soap:operation soapAction="getSubProjects" style="document"/>
      <wsdl:input name="getSubProjects">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSubProjectsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllCheckoutsOfProject">
      <soap:operation soapAction="getAllCheckoutsOfProject" style="document"/>
      <wsdl:input name="getAllCheckoutsOfProject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllCheckoutsOfProjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingMergeIdentifier">
      <soap:operation soapAction="setSettingMergeIdentifier" style="document"/>
      <wsdl:input name="setSettingMergeIdentifier">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingMergeIdentifierResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getIgnoreFileById">
      <soap:operation soapAction="getIgnoreFileById" style="document"/>
      <wsdl:input name="getIgnoreFileById">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getIgnoreFileByIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="deleteProject">
      <soap:operation soapAction="deleteProject" style="document"/>
      <wsdl:input name="deleteProject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="deleteProjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllReadableProjects">
      <soap:operation soapAction="getAllReadableProjects" style="document"/>
      <wsdl:input name="getAllReadableProjects">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllReadableProjectsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="isSettingCacheOutputFiles">
      <soap:operation soapAction="isCacheOutputFiles" style="document"/>
      <wsdl:input name="isSettingCacheOutputFiles">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isSettingCacheOutputFilesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllNonAuthorizedUsersOfProject">
      <soap:operation soapAction="getAllNonAuthorizedUsersOfProject" style="document"/>
      <wsdl:input name="getAllNonAuthorizedUsersOfProject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllNonAuthorizedUsersOfProjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="compare">
      <soap:operation soapAction="compare" style="document"/>
      <wsdl:input name="compare">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="compareResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="findClashesByEid">
      <soap:operation soapAction="findClashesByEid" style="document"/>
      <wsdl:input name="findClashesByEid">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="findClashesByEidResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllAuthorizedUsersOfProject">
      <soap:operation soapAction="getAllAuthorizedUsersOfProject" style="document"/>
      <wsdl:input name="getAllAuthorizedUsersOfProject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllAuthorizedUsersOfProjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataObjectByOid">
      <soap:operation soapAction="getDataObjectByOid" style="document"/>
      <wsdl:input name="getDataObjectByOid">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDataObjectByOidResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUsers">
      <soap:operation soapAction="getAllUsers" style="document"/>
      <wsdl:input name="getAllUsers">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllUsersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getLastClashes">
      <soap:operation soapAction="getLastClashes" style="document"/>
      <wsdl:input name="getLastClashes">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getLastClashesResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getCurrentUser">
      <soap:operation soapAction="getCurrentUser" style="document"/>
      <wsdl:input name="getCurrentUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getCurrentUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="undeleteProject">
      <soap:operation soapAction="undeleteProject" style="document"/>
      <wsdl:input name="undeleteProject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="undeleteProjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getDataObjectsByType">
      <soap:operation soapAction="getDataObjectsByType" style="document"/>
      <wsdl:input name="getDataObjectsByType">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getDataObjectsByTypeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="login">
      <soap:operation soapAction="login" style="document"/>
      <wsdl:input name="login">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="loginResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="ping">
      <soap:operation soapAction="ping" style="document"/>
      <wsdl:input name="ping">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="pingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendCompareEmail">
      <soap:operation soapAction="sendCompareEmail" style="document"/>
      <wsdl:input name="sendCompareEmail">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="sendCompareEmailResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="validateAccount">
      <soap:operation soapAction="validateAccount" style="document"/>
      <wsdl:input name="validateAccount">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="validateAccountResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSettingSiteAddress">
      <soap:operation soapAction="getSettingsSiteAddress" style="document"/>
      <wsdl:input name="getSettingSiteAddress">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSettingSiteAddressResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="setSettingHeaderAddition">
      <soap:operation soapAction="setSettingHeaderAddition" style="document"/>
      <wsdl:input name="setSettingHeaderAddition">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="setSettingHeaderAdditionResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getProjectByName">
      <soap:operation soapAction="getProjectByName" style="document"/>
      <wsdl:input name="getProjectByName">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getProjectByNameResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeUserFromProject">
      <soap:operation soapAction="removeUserFromProject" style="document"/>
      <wsdl:input name="removeUserFromProject">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeUserFromProjectResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getSerializerById">
      <soap:operation soapAction="getSerializerById" style="document"/>
      <wsdl:input name="getSerializerById">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getSerializerByIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="ServerException">
        <soap:fault name="ServerException" use="literal"/>
      </wsdl:fault>
      <wsdl:fault name="UserException">
        <soap:fault name="UserException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="ServiceInterfaceService">
    <wsdl:port name="soapPort" binding="tns:ServiceInterfaceServiceSoapBinding">
      <soap:address location="http://localhost:9090/soapPort"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
