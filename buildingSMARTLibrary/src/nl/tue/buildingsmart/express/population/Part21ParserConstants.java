/* Generated By:JavaCC: Do not edit this line. Part21ParserConstants.java */
package nl.tue.buildingsmart.express.population;


/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface Part21ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EMBEDDED_REMARK = 6;
  /** RegularExpression Id. */
  int LPAREN = 7;
  /** RegularExpression Id. */
  int RPAREN = 8;
  /** RegularExpression Id. */
  int LBRACE = 9;
  /** RegularExpression Id. */
  int RBRACE = 10;
  /** RegularExpression Id. */
  int LBRACKET = 11;
  /** RegularExpression Id. */
  int RBRACKET = 12;
  /** RegularExpression Id. */
  int SEMICOLON = 13;
  /** RegularExpression Id. */
  int COLON = 14;
  /** RegularExpression Id. */
  int COMMA = 15;
  /** RegularExpression Id. */
  int DOT = 16;
  /** RegularExpression Id. */
  int EQ = 17;
  /** RegularExpression Id. */
  int DOLLAR = 18;
  /** RegularExpression Id. */
  int STAR = 19;
  /** RegularExpression Id. */
  int SLASH = 20;
  /** RegularExpression Id. */
  int INTEGER = 21;
  /** RegularExpression Id. */
  int KEYWORD = 22;
  /** RegularExpression Id. */
  int USER_DEFINED_KEYWORD = 23;
  /** RegularExpression Id. */
  int STANDARD_KEYWORD = 24;
  /** RegularExpression Id. */
  int SIGN = 25;
  /** RegularExpression Id. */
  int REAL = 26;
  /** RegularExpression Id. */
  int NON_Q_CHAR = 27;
  /** RegularExpression Id. */
  int STRING = 28;
  /** RegularExpression Id. */
  int ENTITY_INSTANCE_NAME = 29;
  /** RegularExpression Id. */
  int ENUMERATION = 30;
  /** RegularExpression Id. */
  int HEX = 31;
  /** RegularExpression Id. */
  int BINARY = 32;
  /** RegularExpression Id. */
  int DIGIT = 33;
  /** RegularExpression Id. */
  int LOWER = 34;
  /** RegularExpression Id. */
  int UPPER = 35;
  /** RegularExpression Id. */
  int SPECIAL = 36;
  /** RegularExpression Id. */
  int REVERSE_SOLIDUS = 37;
  /** RegularExpression Id. */
  int APOSTROPHE = 38;
  /** RegularExpression Id. */
  int CHARACTER = 39;
  /** RegularExpression Id. */
  int CONTROL_DIRECTIVE = 40;
  /** RegularExpression Id. */
  int PAGE = 41;
  /** RegularExpression Id. */
  int ALPHABET = 42;
  /** RegularExpression Id. */
  int EXTENDED2 = 43;
  /** RegularExpression Id. */
  int EXTENDED4 = 44;
  /** RegularExpression Id. */
  int END_EXTENDED = 45;
  /** RegularExpression Id. */
  int ARBITRARY = 46;
  /** RegularExpression Id. */
  int HEX_ONE = 47;
  /** RegularExpression Id. */
  int HEX_TWO = 48;
  /** RegularExpression Id. */
  int HEX_FOUR = 49;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<EMBEDDED_REMARK>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\":\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\"$\"",
    "\"*\"",
    "\"/\"",
    "<INTEGER>",
    "<KEYWORD>",
    "<USER_DEFINED_KEYWORD>",
    "<STANDARD_KEYWORD>",
    "<SIGN>",
    "<REAL>",
    "<NON_Q_CHAR>",
    "<STRING>",
    "<ENTITY_INSTANCE_NAME>",
    "<ENUMERATION>",
    "<HEX>",
    "<BINARY>",
    "<DIGIT>",
    "<LOWER>",
    "<UPPER>",
    "<SPECIAL>",
    "\"\\\\\"",
    "\"\\\'\"",
    "<CHARACTER>",
    "<CONTROL_DIRECTIVE>",
    "<PAGE>",
    "<ALPHABET>",
    "<EXTENDED2>",
    "<EXTENDED4>",
    "<END_EXTENDED>",
    "<ARBITRARY>",
    "<HEX_ONE>",
    "<HEX_TWO>",
    "<HEX_FOUR>",
    "\"ISO-10303-21;\"",
    "\"END-ISO-10303-21\"",
    "\"HEADER;\"",
    "\"ENDSEC;\"",
    "\"DATA;\"",
    "\"&SCOPE\"",
    "\"ENDSCOPE\"",
  };

}
